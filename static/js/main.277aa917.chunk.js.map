{"version":3,"sources":["components/menus/MainDropDownMenu.js","pageframe/menus/LangMenu.js","components/menus/DropdownNavLink.js","pageframe/menus/ExperienceMenu.js","pageframe/menus/ProductsServices.js","pageframe/menus/ProjectsMenu.js","pageframe/menus/HomeLink.js","pageframe/Navbartop.js","components/text/FontIcon.js","components/commons/Logoicon.js","pageframe/menus/AppIcon.js","pageframe/menus/FollowUsMenu.js","components/buttons/MenuNavLink.js","pageframe/menus/PrivacyMenu.js","components/menus/DropdownExternalLink.js","components/modules/GetLocaleFromHead.js","components/modules/LocaleForMarkDownRoute.js","components/textProcessor/PRM.js","pageframe/menus/ContactMenuOptions.js","components/modules/MyContactInfo.js","pageframe/menus/ContactMenu.js","pageframe/Navbarbottom.js","components/modules/AllowReRender.js","components/panels/SideVerticalPanel.js","pages/content/softwarePremium.js","pages/content/softwareFree.js","pages/projects/upcomingSoftware.js","components/textProcessor/SUB.js","components/textProcessor/TransMultiPRM.js","pageparts/cv/Education.js","localization/TX.js","components/buttons/LinkWithInfo.js","pageparts/contact/ContactSnippet.js","pages/experience/education.js","pageparts/cv/References.js","pages/experience/references.js","components/textProcessor/TransMultiSection.js","pages/projects/entrepreneurships.js","pageparts/cv/Experience.js","pages/experience/experience.js","pageparts/cv/ProfilePic.js","pageparts/cv/MyInfo.js","pageparts/cv/Summary.js","pages/structure/home.js","pageparts/cv/Repositories.js","pages/projects/projects.js","pages/content/repositories.js","components/panels/NormalPanel.js","pages/experience/story.js","pageparts/structure/NotFoundPP.js","pages/structure/notfound.js","pageparts/legal/TermsPP.js","pages/legal/terms.js","pageparts/legal/PrivacyPP.js","pages/legal/privacy.js","pageparts/legal/CookiesPP.js","pages/legal/cookies.js","pageparts/cv/DataSciencePack.js","pages/content/dataSciencePackages.js","pageparts/cv/WorkProfilePP.js","pages/content/workprofile.js","pageparts/cv/Skills.js","pages/content/skills.js","pageparts/cv/Research.js","pageparts/cv/Awards.js","pages/experience/cv.js","pageparts/structure/ComingSoonPP.js","pages/structure/comingsoon.js","routers/DashboardRoutes.js","routers/MainContainer.js","localization/HtmlHeadManager.js","components/modules/ScreenType.js","routers/PageFrame.js","components/modules/GetLocaleAndPath.js","routers/AppRouter.js","localization/i18n.js","App.js","serviceWorker.js","index.js"],"names":["MainDropDownMenu","buttonText","content","menuClassName","buttonClassName","contentClassName","buttonTextClassName","Dropdown","className","Toggle","Menu","LangMenu","i18n","locale","path","langs","langNames","currLangIndex","findIndex","element","currLang","splice","Item","onClick","lng","window","history","replaceState","changeLanguage","DropdownNavLink","activeClassName","NavClassName","route","name","linkTextClassName","as","exact","to","ExperienceMenu","mainT","style","borderColor","ProductsServices","ProjectsMenu","HomeLink","NavbarTop","nextProps","nextState","this","props","AllowReRender","preZone","postZone","lowerMenusWidth","screenType","minHeight","t","id","React","Component","withTranslation","FontIcon","iconSize","spanClass","iconName","Logoicon","height","src","location","origin","alt","AppIcon","href","FollowUsMenu","title","iconClassName","icons","fontIcon","MenuNavLink","PrivacyMenu","addClass","rights","TermsNpolicies","DropdownExternalLink","LinkClassName","text","target","isBlank","GetLocaleFromHead","document","documentElement","lang","LocaleForMarkDownRoute","txt","replace","PRM","classN","renderers","Paragraph","source","ContactMenuOptions","whatsappButtonContent","color","callButtonContent","emailButtonContent","wappURL","ContactMenu","isTop","topText","NavbarBottom","console","log","LowerContactMenu","UpperContactMenu","overNav","colDistributionA","colDistributionB","AllowReRenderTopNavBar","currentProps","AllowReRenderBottomNavBar","AllowReRenderContent","AllowReRenderHelmet","SideVerticalPanel","leftContent","rightContent","inBeginningAndEndMini","containerClass","overPanel","SUB","TagN","res","length","TransMultiPRM","titletag","titleClassN","paragraphClass","arrText","shift","forEach","item","lineMaker","sub","Education","tCV","TX","word","resource","LinkWithInfo","ButtonText","TooltipText","isTblank","useState","show","setShow","useRef","tblank","ref","onMouseEnter","onMouseLeave","Overlay","current","placement","Tooltip","ContactSnippet","tMain","hideCV","hideSkills","cvLink","mySkills","downloadpdf","ContactMe","removedNum","colwidth","buttonWrapper","cont","References","TransMultiSection","sectionsArr","list","map","Experience","datascience","developer","indepAnalyst","indepSoft","experienceArr","independent","experience","ProfilePic","width","role","scientistSkills","softwareSkills","border","MyInfo","Summary","summary","Repositories","NormalPanel","NotFoundPP","tNF","TermsPP","PrivacyPP","CookiesPP","DataSciencePack","WorkProfilePP","profile","Skills","Research","Awards","full","conctactSection","padding","ComingSoonPP","tMAIN","DashboardRoutes","render","MainContainer","HtmlHeadManager","basicKeywords","getCurrentScreenType","w","screen","h","screenSize","PageFrame","state","addEventListener","currentscreenType","setState","GetLocaleAndPath","locationObj","relativepath","pathname","search","hash","oldlocale","language","localStorage","i18nextLng","parts","split","filter","e","GetURLParts","error","partstwo","concat","newpath","join","faultyLocale","AppRouter","options","order","lookupQuerystring","lookupCookie","lookupLocalStorage","lookupSessionStorage","lookupFromPathIndex","lookupFromSubdomainIndex","caches","excludeCacheFor","cookieMinutes","cookieDomain","htmlTag","cookieOptions","sameSite","use","LanguageDetector","initReactI18next","init","whitelist","fallbackLng","debug","detection","interpolation","escapeValue","resources","en","cookies","ENcookies","dataSciencePackages","ENdataSciencePackages","education","ENeducation","entrepreneurships","ENentrepreneurships","ENexperience","home","ENhome","notfound","ENnotfound","privacy","ENprivacy","projects","ENprojects","repositories","ENrepositories","skills","ENskills","softwareFree","ENsoftwareFree","softwarePremium","ENsoftwarePremium","story","ENstory","terms","ENterms","upcomingSoftware","ENupcomingSoftware","workprofile","ENworkprofile","main","ENmain","cv","ENcv","references","ENreferences","es","EScookies","ESdataSciencePackages","ESeducation","ESentrepreneurships","ESexperience","EShome","ESnotfound","ESprivacy","ESprojects","ESrepositories","ESskills","ESsoftwareFree","ESsoftwarePremium","ESstory","ESterms","ESupcomingSoftware","ESworkprofile","ESmain","EScv","ESreferences","I18nextProvider","context","basename","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"oqqBAqBeA,EAlBU,SAAC,GAEnB,IADHC,EACE,EADFA,WAAYC,EACV,EADUA,QAASC,EACnB,EADmBA,cAAeC,EAClC,EADkCA,gBAAiBC,EACnD,EADmDA,iBAAkBC,EACrE,EADqEA,oBAGvE,OACI,mCACA,eAACC,EAAA,EAAD,CAAUC,UAAWL,EAArB,UACE,cAACI,EAAA,EAASE,OAAV,CAAiBD,UAAWJ,EAA5B,SACF,sBAAMI,UAAWF,EAAjB,SAAuCL,MAErC,cAACM,EAAA,EAASG,KAAV,CAAeF,UAAWH,EAA1B,SACGH,UC6BES,EAvCE,SAACR,EAAcS,EAAKC,EAAOC,GAExC,IAKMC,EAAQ,CAAC,KAAK,MACdC,EAAY,CAAC,UAAU,cAEvBC,EAAgBF,EAAMG,WAAU,SAAAC,GAAO,OAAIA,IAAYN,KACvDO,EAAWJ,EAAUK,OAAOJ,EAAc,GAChDF,EAAMM,OAAOJ,EAAc,GAE3B,IAAMhB,EAAa,qCAAE,mBAAGO,UAAU,iCAAmC,+BAAOY,OAOtElB,EAAU,mCACd,cAACK,EAAA,EAASe,KAAV,CAAed,UAJI,4BAIqBe,QAAS,kBApB3BC,EAoBgDT,EAAM,GAnB5EU,OAAOC,QAAQC,aAAa,KAAM,GAAI,MAAMH,EAAI,IAAIV,QACpDF,EAAKgB,eAAeJ,GAFC,IAACA,GAoBtB,SAAiF,sBAAMhB,UAHjE,QAG2D,SAAqCQ,EAAU,SAGlI,OACE,mCACA,cAAC,EAAD,CACAf,WAAYA,EACZC,QAASA,EACTC,cAAeA,EACfC,gBAhBsB,iHAiBtBC,iBAfuB,oDAgBvBC,oBAjB0B,a,QCJjBuB,EAZS,SAAC,GAElB,IADHhB,EACE,EADFA,OAAOiB,EACL,EADKA,gBAAgBC,EACrB,EADqBA,aAAaC,EAClC,EADkCA,MAAMC,EACxC,EADwCA,KAAKC,EAC7C,EAD6CA,kBAE/C,OACI,cAAC3B,EAAA,EAASe,KAAV,CAAea,GAAG,OAAO3B,UAAU,qBAAnC,SACA,cAAC,IAAD,CAASsB,gBAAiBA,EACvBtB,UAAWuB,EACXK,OAAK,EAACC,GAAI,IAAIxB,EAAOmB,EAFxB,SAE+B,sBAAMxB,UAAW0B,EAAjB,SAAqCD,SC0B7DK,EAjCQ,SAACC,EAAMpC,EAAcU,GAExC,IAAMZ,EAAasC,EAAM,cAInBR,EAAe,4BACfG,EAAkB,QAElBhC,EAAU,qCACd,cAAC,EAAD,CAAkB8B,MAAO,eAAgBC,KAAMM,EAAM,eAAgBL,kBAAmBA,EAAmBJ,gBAAiB,SAAUC,aAAcA,EAAclB,OAAQA,IAC1K,oBAAIL,UAAU,oBAAoBgC,MAAO,CAACC,YAAY,WACtD,cAAC,EAAD,CAAkBT,MAAO,cAAeC,KAAMM,EAAM,cAAeL,kBAAmBA,EAAmBJ,gBAAiB,SAAUC,aAAcA,EAAclB,OAAQA,IACxK,cAAC,EAAD,CAAkBmB,MAAO,aAAcC,KAAMM,EAAM,aAAcL,kBAAmBA,EAAmBJ,gBAAiB,SAAUC,aAAcA,EAAclB,OAAQA,IACtK,oBAAIL,UAAU,oBAAoBgC,MAAO,CAACC,YAAY,WACtD,cAAC,EAAD,CAAkBT,MAAO,MAAOC,KAAMM,EAAM,MAAOL,kBAAmBA,EAAmBJ,gBAAiB,SAAUC,aAAcA,EAAclB,OAAQA,IACxJ,cAAC,EAAD,CAAkBmB,MAAO,cAAeC,KAAMM,EAAM,cAAeL,kBAAmBA,EAAmBJ,gBAAiB,SAAUC,aAAcA,EAAclB,OAAQA,IACxK,oBAAIL,UAAU,oBAAoBgC,MAAO,CAACC,YAAY,WACtD,cAAC,EAAD,CAAkBT,MAAO,SAAUC,KAAMM,EAAM,WAAYL,kBAAmBA,EAAmBJ,gBAAiB,SAAUC,aAAcA,EAAclB,OAAQA,OAGlK,OACE,cAAC,EAAD,CACAZ,WAAYA,EACZC,QAASA,EACTC,cAAeA,EACfC,gBAvBsB,iHAwBtBC,iBAtBuB,uCAuBvBC,oBAxB0B,WC4BjBoC,EAhCU,SAACH,EAAMpC,EAAcU,GAE1C,IAAMZ,EAAasC,EAAM,OAInBR,EAAe,4BACfG,EAAkB,QAElBhC,EAAU,qCACd,cAAC,EAAD,CAAkB8B,MAAO,eAAgBC,KAAMM,EAAM,eAAgBL,kBAAmBA,EAAmBJ,gBAAiB,SAAUC,aAAcA,EAAclB,OAAQA,IAC1K,oBAAIL,UAAU,oBAAoBgC,MAAO,CAACC,YAAY,WACtD,cAAC,EAAD,CAAkBT,MAAO,UAAWC,KAAMM,EAAM,YAAaL,kBAAmBA,EAAmBJ,gBAAiB,SAAUC,aAAcA,EAAclB,OAAQA,IAClK,oBAAIL,UAAU,oBAAoBgC,MAAO,CAACC,YAAY,WACtD,cAAC,EAAD,CAAkBT,MAAO,iBAAkBC,KAAMM,EAAM,YAAc,KAAOA,EAAM,eAAiB,IAAKL,kBAAmBA,EAAmBJ,gBAAiB,SAAUC,aAAcA,EAAclB,OAAQA,IAC7M,cAAC,EAAD,CAAkBmB,MAAO,YAAaC,KAAMM,EAAM,YAAc,KAAOA,EAAM,WAAa,IAAKL,kBAAmBA,EAAmBJ,gBAAiB,SAAUC,aAAcA,EAAclB,OAAQA,IACpM,cAAC,EAAD,CAAkBmB,MAAO,wBAAyBC,KAAMM,EAAM,gBAAiBL,kBAAmBA,EAAmBJ,gBAAiB,SAAUC,aAAcA,EAAclB,OAAQA,IACpL,cAAC,EAAD,CAAkBmB,MAAO,gBAAiBC,KAAMM,EAAM,gBAAiBL,kBAAmBA,EAAmBJ,gBAAiB,SAAUC,aAAcA,EAAclB,OAAQA,OAG9K,OACE,cAAC,EAAD,CACAZ,WAAYA,EACZC,QAASA,EACTC,cAAeA,EACfC,gBAtBsB,iHAuBtBC,iBArBuB,uCAsBvBC,oBAvB0B,WCuBjBqC,EA3BM,SAACJ,EAAMpC,EAAcU,GAEtC,IAAMZ,EAAasC,EAAM,YAInBR,EAAe,4BACfG,EAAkB,QAElBhC,EAAU,qCACd,cAAC,EAAD,CAAkB8B,MAAO,YAAaC,KAAMM,EAAM,YAAaL,kBAAmBA,EAAmBJ,gBAAiB,SAAUC,aAAcA,EAAclB,OAAQA,IACpK,cAAC,EAAD,CAAkBmB,MAAO,qBAAsBC,KAAMM,EAAM,qBAAsBL,kBAAmBA,EAAmBJ,gBAAiB,SAAUC,aAAcA,EAAclB,OAAQA,IACtL,cAAC,EAAD,CAAkBmB,MAAO,qBAAsBC,KAAMM,EAAM,gBAAiBL,kBAAmBA,EAAmBJ,gBAAiB,SAAUC,aAAcA,EAAclB,OAAQA,OAGnL,OACE,cAAC,EAAD,CACAZ,WAAYA,EACZC,QAASA,EACTC,cAAeA,EACfC,gBAjBsB,iHAkBtBC,iBAhBuB,uCAiBvBC,oBAlB0B,WCIjBsC,EATE,SAACL,EAAM1B,GACpB,OACI,cAAC,IAAD,CAASiB,gBAAiB,SACvBtB,UAAW,GACX4B,OAAK,EAACC,GAAI,IAAIxB,EAFjB,SAEyB,oBAAIL,UAAU,gCAAd,SAA+C+B,EAAM,oBCChFM,E,oLAEkBC,EAAWC,GAC/B,OAAOC,KAAKC,MAAMC,cAAcJ,EAAWE,KAAKC,S,+BAKhD,IAAM9C,EACJ,sCAEEgD,EAAU,GACVC,EAAW,GACXC,EAAkB,EAqBtB,MAnB8B,UAA1BL,KAAKC,MAAMK,YACbD,EAAkB,EAClBF,EAAS,qCACP,qBAAK3C,UAAU,sCAAsCgC,MAAO,CAAEe,UAAW,QAAzE,SACGX,EAASI,KAAKC,MAAMO,EAAER,KAAKC,MAAMpC,UAEpC,qBAAKL,UAAU,sCAAsCgC,MAAO,CAAEe,UAAW,QAAzE,SACG5C,EAASR,EAAe6C,KAAKC,MAAMrC,KAAKoC,KAAKC,MAAMpC,OAAOmC,KAAKC,MAAMnC,aAI1EqC,EAAS,qBAAK3C,UAAU,sCAAsCgC,MAAO,CAAEe,UAAW,QAAzE,SACNX,EAASI,KAAKC,MAAMO,EAAER,KAAKC,MAAMpC,UAEpCuC,EAAW,qBAAK5C,UAAU,sCAAsCgC,MAAO,CAAEe,UAAW,QAAzE,SACR5C,EAASR,EAAe6C,KAAKC,MAAMrC,KAAMoC,KAAKC,MAAMpC,OAAOmC,KAAKC,MAAMnC,SAKzE,qBAAK2C,GAAG,SAASjD,UAAU,UAA3B,SACE,qBACEA,UAAU,sEACVgC,MAAO,CAAEe,UAAW,QAFtB,SAIE,qBAAK/C,UAAU,sCAAf,SACE,sBAAKA,UAAU,kFAAf,UACG2C,EACD,qBAAK3C,UAAW,OAAO6C,EAAgB,iCAAkCb,MAAO,CAAEe,UAAW,QAA7F,SACGjB,EAAeU,KAAKC,MAAMO,EAAErD,EAAc6C,KAAKC,MAAMpC,UAExD,qBAAKL,UAAW,OAAO6C,EAAgB,iCAAkCb,MAAO,CAAEe,UAAW,QAA7F,SACGb,EAAiBM,KAAKC,MAAMO,EAAErD,EAAc6C,KAAKC,MAAMpC,UAE1D,qBAAKL,UAAW,OAAO6C,EAAgB,iCAAkCb,MAAO,CAAEe,UAAW,QAA7F,SACGZ,EAAaK,KAAKC,MAAMO,EAAErD,EAAc6C,KAAKC,MAAMpC,UAErDuC,e,GApDSM,IAAMC,WA6DfC,cAAgB,CAAC,QAAjBA,CAA0Bf,GC3D1BgB,EARE,SAACC,EAASC,EAAUC,GAGjC,MAFe,KAAZD,IACCA,EAAU,IAAIA,GAEd,sBAAMvD,UAAW,UAAUuD,EAA3B,SAAsC,mBAAGvD,UAAWwD,EAAS,IAAIF,OCO1DG,EAXE,SAACzD,EAAU0D,GACxB,OACI,qBACI1D,UAAWA,EACX2D,IAAK1C,OAAO2C,SAASC,OAAS,gBAC9BC,IAAI,wBACJ9B,MAAO,CAAE0B,OAAQA,MCUdK,EAfC,SAAC1D,GACf,OACE,oBACEL,UAAU,2CACVgE,KAAK,iCAFP,UAIGP,EAAS,MAAM,QAChB,sBAAMzD,UAAU,kBAAhB,kCCsCSiE,EA5CM,SAACjB,EAAGF,GACvB,IACIQ,EAAW,QACI,UAAfR,IACFQ,EAAW,SAGb,IAAMY,EAAQ,sBAAMlE,UANF,iCAMJ,SAA6BgD,EAAE,iBAEvCmB,EAAgB,gBAGhBC,EACJ,qCACE,mBAAGJ,KAAK,gDAAgDhE,UAAWmE,EAAnE,SAAmFE,EAASf,EAAS,OAAO,oBAC5G,mBAAGU,KAAK,kCAAkChE,UAAWmE,EAArD,SAAqEE,EAASf,EAAS,OAAO,kBAC7FS,OAIDrE,EAAU,GAiBd,OAfEA,EADiB,UAAfoD,EAEA,qCACE,sBAAM9C,UAAU,0BAAhB,SAA2CkE,IAC3C,sBAAMlE,UAAU,cAAhB,SAA+BoE,OAKjC,qCACE,+BAAOF,IACP,+BAAOE,OAMX,sBAAMpE,UAAU,sBAAhB,SACKN,KC9BM4E,EAVK,SAAC,GAEd,IADHjE,EACE,EADFA,OAAOiB,EACL,EADKA,gBAAgBC,EACrB,EADqBA,aAAaC,EAClC,EADkCA,MAAMC,EACxC,EADwCA,KAAKC,EAC7C,EAD6CA,kBAE/C,OACI,cAAC,IAAD,CAASC,GAAG,OAAOL,gBAAiBA,EACjCtB,UAAWuB,EACXK,OAAK,EAACC,GAAI,IAAIxB,EAAOmB,EAFxB,SAE+B,sBAAMxB,UAAW0B,EAAjB,SAAqCD,OCmC7D8C,EAzCK,SAACvB,EAAEF,EAAWzC,GAE9B,IAAMkB,EAAe,gBAEjBiD,EAAW,GACC,WAAb1B,IACC0B,EAAW,UAGf,IAAMC,EAAS,mCACX,sBAAMzE,UAAWwE,EAAS,QAA1B,SAAoCxB,EAAE,cAGpC0B,EAAiB,qCACnB,cAAC,EAAD,CAAclD,MAAO,SAAUC,KAAMuB,EAAE,SAAUtB,kBAAmB8C,EAAUlD,gBAAiB,SAAUC,aAAcA,EAAclB,OAAQA,IAC7I,cAAC,EAAD,CAAcmB,MAAO,WAAYC,KAAM,UAAKuB,EAAE,WAAYtB,kBAAmB8C,EAAUlD,gBAAiB,SAAUC,aAAcA,EAAclB,OAAQA,IACtJ,cAAC,EAAD,CAAcmB,MAAO,WAAYC,KAAM,UAAKuB,EAAE,WAAYtB,kBAAmB8C,EAAUlD,gBAAiB,SAAUC,aAAcA,EAAclB,OAAQA,OAGtJX,EAAU,GAed,OAXIA,EADY,WAAboD,EACW,qCACN,sBAAM9C,UAAU,cAAhB,SAA+ByE,IAC/B,sBAAMzE,UAAU,cAAhB,SAA+B0E,OAGzB,qCACN,+BAAOD,IACP,+BAAOC,OAKX,sBAAM1E,UAAU,2BAAhB,SACKN,KCpBEiF,EAhBc,SAAC,GAEvB,IADHC,EACE,EADFA,cAAcZ,EACZ,EADYA,KAAKa,EACjB,EADiBA,KAEfC,EAAO,GAKX,OAJa,IAFX,EADsBC,UAIpBD,EAAO,UAIP,cAAC/E,EAAA,EAASe,KAAV,CAAea,GAAG,OAAO3B,UAAU,qBAAnC,SACA,mBAAGA,UAAW4E,EAAeZ,KAAMA,EAAMc,OAAQA,EAAjD,SAA0DD,O,iBCNnDG,EAPW,WAEtB,OACIC,SAASC,gBAAgBC,MCQlBC,EATgB,SAACC,GAE5B,IAAMhF,EAAS2E,IAEf,OADeK,EAAIC,QAAQ,gBAAiBjF,ICQjCkF,EATH,SAACC,EAAOX,GAEhB,IAAMQ,EAAMD,EAAuBP,GAEnC,OACI,cAAC,IAAD,CAAeY,UAAW,CAACC,UAAW,QAAS1F,UAAWwF,EAAQG,OAAQN,KCL5E9D,EAAe,6BA4BNqE,EA1BY,SAAC7D,GAE1B,IAAM8D,EAAuB,qCAC3B,mBAAG7F,UAAU,wBAAwBgC,MAAO,CAAC8D,MAAO,aAAiB,sBAAM9F,UAAU,aAAhB,yBAGjE+F,EAAmB,qCACvB,mBAAG/F,UAAU,qBAAqBgC,MAAO,CAAC8D,MAAO,aAAiB,sBAAM9F,UAAU,aAAhB,SCAlD,uBDGZgG,EAAoB,qCACxB,mBAAGhG,UAAU,wBAAwBgC,MAAO,CAAC8D,MAAO,aAAiB,sBAAM9F,UAAU,aAAhB,SAA8B,iCAG/FiG,EAAU,yDAAiElE,EAAM,QAIvF,OACE,qCACE,cAAC,EAAD,CAAsB6C,cAAerD,EAAcyC,KAAMiC,EAASpB,KAAMgB,EAAuBd,SAAS,IACxG,cAAC,EAAD,CAAsBH,cAAerD,EAAcyC,KANvC,oBAMsDa,KAAMkB,EAAmBhB,SAAS,IACpG,cAAC,EAAD,CAAsBH,cAAerD,EAAcyC,KANtC,mCAMsDa,KAAMmB,EAAoBjB,SAAS,QEK7FmB,EA7BK,SAACnE,EAAMoE,GACvB,IAAM1G,EAAasC,EAAM,aAErBqE,EAAS,WACF,IAARD,IACDC,EAAQ,cAGV,IAKM1G,EAAUkG,EAAmB7D,GAEnC,OACE,qBAAKkB,GAAMmD,EAASpG,UAAU,aAA9B,SACA,cAAC,EAAD,CACAP,WAAYA,EACZC,QAASA,EACTC,cAZoB,2CAapBC,gBAZsB,oGAatBC,iBAXuB,gBAYvBC,oBAb0B,iBCR1BuG,E,oLACkB/D,EAAWC,GAC/B,OAAOC,KAAKC,MAAMC,cAAcJ,EAAWE,KAAKC,S,+BAIhD6D,QAAQC,IAAI,6BAGZ,IAAIC,EAAkB,GAClBC,EAAkB,GAEQ,UAA1BjE,KAAKC,MAAMK,WACb2D,EAAmBP,EACjB1D,KAAKC,MAAMO,GACX,GAIFwD,EACE,sBAAKxG,UAAU,2CAAf,UACE,sBAAMA,UAAU,oBAAhB,SACGkG,EAAY1D,KAAKC,MAAMO,GAAG,KAE7B,wCAKN,IAAM0D,EACJ,mCACE,qBAAKzD,GAAG,UAAUjD,UAAU,yCAA5B,SACGyG,MAKHE,EAAmB,EACnBC,EAAmB,EACK,UAAxBpE,KAAKC,MAAMK,aACb6D,EAAmB,EACnBC,EAAmB,GAGrB,IAAMlH,EACJ,qCACE,qBAAKM,UAAW,OAAS2G,EAAmB,0BAA5C,SACG1C,EAAazB,KAAKC,MAAMO,EAAGR,KAAKC,MAAMK,cAEzC,qBAAK9C,UAAW,OAAS4G,EAAmB,gCAA5C,SACGrC,EACC/B,KAAKC,MAAMO,EACXR,KAAKC,MAAMK,WACXN,KAAKC,MAAMpC,UAGdmG,KAIL,OACE,yBAAQvD,GAAG,SAASjD,UAAU,kBAA9B,UACG0G,EACD,qBACE1G,UAAU,kEACVgC,MAAO,CAAEe,UAAW,QAFtB,SAIE,qBAAK/C,UAAU,4CAAf,SACE,qBAAKA,UAAU,2DAAf,SACGN,e,GArEYwD,IAAMC,WA8ElBC,cAAgB,CAAC,QAAjBA,CAA0BiD,G,OCpF5BQ,EAAyB,SAACvE,EAAWwE,GAChD,OAAGxE,EAAUjC,SAASyG,EAAazG,SAE9BiC,EAAUhC,OAAOwG,EAAaxG,MAEhCwG,EAAahE,aAAaR,EAAUQ,aAK5BiE,EAA4B,SAACzE,EAAWwE,GACnD,OAAGxE,EAAUjC,SAASyG,EAAazG,QAEhCyG,EAAahE,aAAaR,EAAUQ,YAK5BkE,EAAuB,SAAC1E,EAAWwE,GAC9C,OAAGxE,EAAUhC,OAAOwG,EAAaxG,OAE9BgC,EAAUjC,SAASyG,EAAazG,QAEhCyG,EAAahE,aAAaR,EAAUQ,aAK5BmE,EAAsB,SAAC3E,EAAWwE,GAC7C,OAAGxE,EAAUjC,SAASyG,EAAazG,QCkCtB6G,GCpDA9D,YAAgB,CAAC,mBAAjBA,EARS,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,EAAmB,EAAjBF,WAC1B,OACE,8BACKE,EAAE,uBCKII,YAAgB,CAAC,gBAAjBA,EARM,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,EAAmB,EAAjBF,WACvB,OACE,8BACKE,EAAE,uBCKII,YAAgB,CAAC,oBAAjBA,EARU,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,EAAmB,EAAjBF,WAC3B,OACE,8BACKE,EAAE,uBHJe,SAACF,EAAWqE,EAAYC,EAAaC,GAE3D,IAAIC,EAAiB,2CAEJ,WAAbxE,IACAwE,GAAkC,UAGtC,IAAI5H,EAAU,GAEd,GAAmB,WAAfoD,EACJpD,EAAW,sBAAKM,UAAU,+BAAf,UACP,qBAAKA,UAAW,sCAAhB,SACI,+BAAOmH,MAEX,qBAAKnH,UAAW,YAAhB,SACI,+BAAOoH,aAGV,CACD,IAAIG,EAAW,IACY,IAAxBF,IACCE,EAAY,qBAAKvH,UAAW,aAAhB,SACR,+BAAOoH,OAKf1H,EAAW,sBAAKM,UAAU,oBAAf,UACNuH,EACL,qBAAKvH,UAAW,aAAhB,SACI,+BAAOmH,MAEX,qBAAKnH,UAAW,aAAhB,SACI,+BAAOoH,SAoBf,OACI,qBAAKpH,UAAWsH,EAAhB,SACK5H,MI3CE8H,EAbH,SAACC,EAAKjC,EAAOX,GAErB,IAAI6C,EAAM,WAMV,OAJG7C,EAAK8C,OAAO,IACXD,EAAM,cAACD,EAAD,CAAMzH,UAAWwF,EAAjB,SAA0BX,KAIhC6C,GCgBOE,EAvBO,SAAC5E,EAAE6E,EAASC,EAAYC,EAAevC,EAAOwC,GAChE,IAAM9D,EAAQ8D,EAAQC,QAClB5C,EAAM,GASV2C,EAAQE,SAAQ,SAACC,IAPC,SAACA,GACN,KAAN9C,IACCA,GAAS,QAEbA,GAAYrC,EAAEmF,GAGUC,CAAUD,MAEtC,IAAME,EAAMnE,GAASsD,EAAIK,EAASC,EAAY9E,EAAEkB,IAEhD,OACI,qCACI,+BAAOmE,IACP,sBAAMrI,UAAW+H,EAAjB,SAAkCxC,EAAIC,EAAOH,SCJ1CiD,EAhBG,SAACC,GAWf,OAFoBX,EAAcW,EAAI,KAAK,WAAW,GAAG,eAPpC,CACjB,aACA,aACA,aACA,aACA,gBCPOC,EAFJ,SAACxF,EAAEyF,EAAKC,GAAe,OAAO1F,EAAE0F,EAAS,IAAID,I,mCCqCzCE,GAhCM,SAAC/I,EAAgBgJ,EAAWC,EAAYlH,EAAGqC,EAAK8E,GAAc,IAAD,EACtDC,oBAAS,GAD6C,mBACvEC,EADuE,KACjEC,EADiE,KAExEnE,EAASoE,iBAAO,MAElBC,EAAS,IACC,IAAXL,IACHK,EAAO,UAUP,OACE,qCACE,mBAAGxH,GAAIA,EAAIyH,IAAKtE,EAAQ9E,UAAW,YAAYJ,EAAiBoE,KAAMA,EAAMqF,aAV7D,WACjBJ,GAAQ,IASgGnE,OAAQqE,EAAQG,aANxG,WAChBL,GAAQ,IAKN,SACGL,IAEH,cAACW,EAAA,EAAD,CAASzE,OAAQA,EAAO0E,QAASR,KAAMA,EAAMS,UAAU,MAAvD,SACG,SAAChH,GAAD,OACC,cAACiH,GAAA,EAAD,yBAAS1J,UAAU,IAAOyC,GAA1B,aACGoG,YC0CAc,GAjEQ,SAAC7G,EAAWyF,EAAIqB,EAAMhK,EAAgBiK,EAAOC,GAEhE,IAAMzJ,EAAS2E,IAEX+E,EAASpB,GAAa/I,EAAgB,sBAAMI,UAAU,YAAhB,SAA6B4J,EAAM,YAAkBA,EAAM,WAAW,OAAO,MAAMvJ,EAAO,QAChI2J,EAAWrB,GAAa/I,EAAgB,sBAAMI,UAAU,YAAhB,SAA6B4J,EAAM,cAAoBA,EAAM,eAAe,OAAO,MAAMvJ,EAAO,YACxI4J,EAActB,GAAa/I,EAAkB,QAAQ,sBAAMI,UAAU,YAAhB,SAA6B4J,EAAM,iBAAuBA,EAAM,iBAAiB,OAAO,+BAA8B,GAIzKM,EAAY,mCAChB,cAAC,EAAD,CACEzK,WAAYmK,EAAM,aAClBlK,QAASkG,EAAmBgE,GAC5BjK,cAPkB,2CAQlBC,gBAAiBA,EAAkB,iCACnCC,iBAPqB,gBAQrBC,oBATwB,gBAatBqK,GAAcN,EAAO,EAAE,IAAMC,EAAW,EAAE,GAC5CM,EAAU,EAEVC,EAAe,GAoCnB,OAnCAzK,GAAoC,SAEjB,WAAfkD,GACFsH,EAAW,GACXC,EAAgB,SAACC,GACf,OAAO,qBAAKtK,UAAW,OAASoK,EAAW,qBAApC,SACL,sBAAOpK,UAAU,eAAjB,SACGsK,SAKJH,EAAW,IACZC,EAAW,GAEbC,EAAgB,SAACC,GACb,OAAO,qBAAKtK,UAAW,OAASoK,EAAW,eAApC,SACL,sBAAOpK,UAAU,eAAjB,SACGsK,QAQC,qBAAKtK,UAAU,qDAAf,SACV,sBAAKA,UAAU,oBAAf,WACI6J,GAAUQ,EAAcN,IACxBD,GAAcO,EAAcL,GAC7BK,EAAcH,GACA,IAAbC,GAAmBE,EAAcJ,SCrC5B7G,kBAlBG,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,EAAEF,EAAiB,EAAjBA,WACdyF,EAAM,SAACE,GAAD,OAAUD,EAAGxF,EAAEyF,EAAK,OAI1BrB,EAAeuC,GAAe7G,EAAWyF,GAHjC,SAACE,GAAD,OAAUD,EAAGxF,EAAEyF,EAAK,UAEV,8FAGlBtB,EAAc,mCACjBmB,EAAUC,KAGb,OACE,qBAAKvI,UAAU,iBAAf,SACKkH,EAAmBpE,EAAWqE,EAAYC,GAAa,QCGjDmD,GArBI,SAAChC,GAgBhB,OAFqBX,EAAcW,EAAI,KAAK,WAAW,GAAG,eAZrC,CACjB,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iBCYOnF,kBAlBI,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,EAAEF,EAAiB,EAAjBA,WACfyF,EAAM,SAACE,GAAD,OAAUD,EAAGxF,EAAEyF,EAAK,OAI1BrB,EAAeuC,GAAe7G,EAAWyF,GAHjC,SAACE,GAAD,OAAUD,EAAGxF,EAAEyF,EAAK,UAEV,8FAGlBtB,EAAc,mCACjBoD,GAAWhC,KAGd,OACE,qBAAKvI,UAAU,iBAAf,SACKkH,EAAmBpE,EAAWqE,EAAYC,GAAa,QCJjDoD,ICLApH,YAAgB,CAAC,qBAAjBA,EARW,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,EAAmB,EAAjBF,WAC5B,OACE,8BACKE,EAAE,uBDHe,SAACA,EAAE6E,EAASC,EAAYC,EAAevC,EAAOtB,EAAMuG,GAC1E,IAAMpC,EAAMnE,GAASsD,EAAIK,EAASC,EAAY9E,EAAEkB,IAC1CwG,EAAOD,EAAYE,KAAI,SAACxC,GAAW,OAAO,sBAAMnI,UAAWwF,EAAjB,SAA0B2C,OAG1E,OACI,qCACI,+BAAOE,IACP,sBAAMrI,UAAW+H,EAAjB,SAAkC2C,SEgD/BE,GAvDI,SAACrC,GAGhB,IAOMsC,EAAcjD,EAAcW,EAAI,KAAK,WAAW,GAAG,eAPlC,CACnB,eACA,eACA,eACA,eACA,iBASEuC,EAAYlD,EAAcW,EAAI,KAAK,WAAW,GAAG,eALlC,CACjB,aACA,aACA,eAUEwC,EAAenD,EAAcW,EAAI,KAAK,WAAW,GAAG,eALlC,CACpB,gBACA,gBACA,kBAUEyC,EAAYpD,EAAcW,EAAI,KAAK,WAAW,GAAG,eANnC,CAChB,aACA,aACA,aACA,eAQI0C,EAAc,CAClBH,EACAD,GAGEK,EAAcV,GAAkBjC,EAAI,KAAK,WAAW,GAAG,eAAe,eATvD,CACjBwC,EACAC,IAQEG,EAAaX,GAAkBjC,EAAI,KAAK,WAAW,GAAG,eAAe,cAAc0C,GAEzF,OACI,qCACI,+BAAOE,IACP,+BAAOD,QC7BJ9H,eAAgB,CAAC,cAAjBA,EAlBI,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,EAAEF,EAAiB,EAAjBA,WACfyF,EAAM,SAACE,GAAD,OAAUD,EAAGxF,EAAEyF,EAAK,OAI1BrB,EAAeuC,GAAe7G,EAAWyF,GAHjC,SAACE,GAAD,OAAUD,EAAGxF,EAAEyF,EAAK,UAEV,8FAGlBtB,EAAc,mCACjByD,GAAWrC,KAGd,OACE,qBAAKvI,UAAU,iBAAf,SACKkH,EAAmBpE,EAAWqE,EAAYC,GAAa,QCKjDgE,GAvBI,SAACpL,EAAUqL,GAE1B,IAAIC,EAAO,GACLC,EAAkB,0BAClBC,EAAiB,+BASvB,OANIF,EAD+B,OAAhCrG,SAASC,gBAAgBC,KACjB,mBAAqBoG,EAAkB,0BAA4BC,EAAiB,IAGpF,2BAA0BD,EAAkB,iCAAmCC,EAAiB,IAIvG,qBACIxL,UAAWA,EACX2D,IAAK1C,OAAO2C,SAASC,OAAS,wBAC9BC,IAAK,6BAA4BwH,EACjCtJ,MAAO,CAAEqJ,MAAOA,EAAMI,OAAO,wBCA1BC,GAfA,SAACnD,GAUZ,OARc,uBAAMvI,UAAU,cAAhB,UACTwH,EAAI,KAAK,WAAWe,EAAI,UACzB,sBAAMvI,UAAU,UAAhB,SAA0B,uBAAMA,UAAU,uCAAhB,UtBiC9BuF,EAAI,GAFY,wEsB/BqF,sBAAMvF,UAAU,OAAhB,0BtByCrGuF,EAAI,GAFU,oDsBtCV,sBAAMvF,UAAU,UAAhB,SAA0B,uBAAMA,UAAU,kCAAhB,UAAkD,4BAAG,mBAAGA,UAAU,mCAAuC,4BAAIuI,EAAI,mBAC3I,sBAAMvI,UAAU,UAAhB,SAA0B,uBAAMA,UAAU,kCAAhB,UAAkD,4BAAG,mBAAGA,UAAU,uCAA4CuF,EAAI,GAAG,uEAC/I,sBAAMvF,UAAU,UAAhB,SAA0B,uBAAMA,UAAU,kCAAhB,UAAkD,4BAAG,mBAAGA,UAAU,gCAAqCuF,EAAI,GAAG,2GCAjIoG,GATC,SAACpD,GAEb,IAAMqD,EAAUrG,EAAI,GAAGgD,EAAI,YAE3B,OACI,sBAAMvI,UAAU,eAAhB,SAAgC4L,KC8DzBxI,kBA7DF,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,EAAEF,EAAiB,EAAjBA,WACTyF,EAAM,SAACE,GAAD,OAAUD,EAAGxF,EAAEyF,EAAK,OAG5BtB,EAAc,GAEhBA,EADiB,WAAfrE,EACY,qBAAK9C,UAAU,+BAAf,SACd,sBAAKA,UAAU,oBAAf,UACE,sBAAKA,UAAU,8BAAf,UACGoL,GAAW,GAAG,QACf,sBAAMpL,UAAU,QAAhB,SAAyB0L,GAAOnD,QAElC,qBAAKvI,UAAU,uBAAf,SACG2L,GAAQpD,UAIU,UAAfzF,EACM,qBAAK9C,UAAU,0BAAf,SACd,sBAAKA,UAAU,oBAAf,UACE,sBAAKA,UAAU,qBAAf,UACGoL,GAAW,GAAG,QACf,sBAAMpL,UAAU,QAAhB,SAAyB0L,GAAOnD,QAElC,qBAAKvI,UAAU,cAAf,SACG2L,GAAQpD,UAKC,qBAAKvI,UAAU,+CAAf,SACZ,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,oCAAf,SACCoL,GAAW,GAAG,UAEf,qBAAKpL,UAAU,wBAAf,SACE,sBAAMA,UAAU,QAAhB,SAAyB0L,GAAOnD,OAElC,qBAAKvI,UAAU,wBAAf,SACE,+BAAO2L,GAAQpD,YAMvB,IACMnB,EAAeuC,GAAe7G,EAAWyF,GA5CjC,SAACE,GAAD,OAAUD,EAAGxF,EAAEyF,EAAK,UA2CV,8FASxB,OACE,qBAAKzI,UAAU,iBAAf,SACKkH,EAAmBpE,EAAWqE,EAAYC,GAAa,QC/CjDyE,ICPAzI,YAAgB,CAAC,YAAjBA,EARE,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,EAAmB,EAAjBF,WACnB,OACE,8BACKE,EAAE,uBDJU,SAACuF,GAWlB,OAFqBX,EAAcW,EAAI,KAAK,WAAW,GAAG,eAPlC,CACpB,gBACA,gBACA,gBACA,gBACA,oBEgBOnF,eAAgB,CAAC,gBAAjBA,EAlBM,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,EAAEF,EAAiB,EAAjBA,WACjByF,EAAM,SAACE,GAAD,OAAUD,EAAGxF,EAAEyF,EAAK,OAI1BrB,EAAeuC,GAAe7G,EAAWyF,GAHjC,SAACE,GAAD,OAAUD,EAAGxF,EAAEyF,EAAK,UAEV,8FAGlBtB,EAAc,mCACjB0E,GAAatD,KAGhB,OACE,qBAAKvI,UAAU,iBAAf,SACKkH,EAAmBpE,EAAWqE,EAAYC,GAAa,QCNjD0E,ICHA1I,YAAgB,CAAC,SAAjBA,EARD,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,EAAmB,EAAjBF,WAChB,OACE,8BACKE,EAAE,uBDJS,SAACF,EAAWpD,GAO5B,OANa,mCACL,qBAAKM,UAAW,sCAAhB,SACI,+BAAON,UEWRqM,GAdI,SAACC,GAShB,OAFmBpE,EAAcoE,EAAI,KAAK,WAAW,GAAG,eALrC,CACf,YACA,eCcO5I,kBAdE,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,EAAEF,EAAiB,EAAjBA,WAGbqE,EAAc,mCACjB4E,IAHS,SAACtD,GAAD,OAAUD,EAAGxF,EAAEyF,EAAK,iBAMhC,OACE,qBAAKzI,UAAU,kCAAf,SACK8L,GAAahJ,EAAWqE,QCMlB8E,GAnBC,SAACjJ,GAEb,IAUQqC,EAAMuC,EAAc5E,EAAE,KAAK,WAAW,GAAG,eAV/B,CACd,WACA,WACA,WACA,WACA,WACA,WACA,aAKJ,OACI,sBAAMhD,UAAU,QAAhB,SAAyBqF,KCClBjC,eAAgB,CAAC,SAAjBA,EAbD,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,EAAEF,EAAiB,EAAjBA,WAEVqE,EAAc,mCACjB8E,GAAQjJ,KAGX,OACE,qBAAKhD,UAAU,sBAAf,SACK8L,GAAahJ,EAAWqE,QCGlB+E,GAdG,SAAClJ,GAEf,IAKQqC,EAAMuC,EAAc5E,EAAE,KAAK,WAAW,GAAG,eAL/B,CACd,WACA,aAKJ,OACI,sBAAMhD,UAAU,QAAhB,SAAyBqF,KCMlBjC,eAAgB,CAAC,WAAjBA,EAbC,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,EAAEF,EAAiB,EAAjBA,WAEZqE,EAAc,mCACjB+E,GAAUlJ,KAGb,OACE,qBAAKhD,UAAU,sBAAf,SACK8L,GAAahJ,EAAWqE,QCGlBgF,GAdG,SAACnJ,GAEf,IAKQqC,EAAMuC,EAAc5E,EAAE,KAAK,WAAW,GAAG,eAL/B,CACd,WACA,aAKJ,OACI,sBAAMhD,UAAU,QAAhB,SAAyBqF,KCMlBjC,eAAgB,CAAC,WAAjBA,EAbC,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,EAAEF,EAAiB,EAAjBA,WAEZqE,EAAc,mCACjBgF,GAAUnJ,KAGb,OACE,qBAAKhD,UAAU,sBAAf,SACK8L,GAAahJ,EAAWqE,QCElBiF,GAbS,SAAC7D,GAQrB,OAFoBX,EAAcW,EAAI,KAAK,WAAW,GAAG,eAJ9B,CACvB,mBACA,mBCmBOnF,eAAgB,CAAC,uBAAjBA,EAlBa,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,EAAEF,EAAiB,EAAjBA,WACxByF,EAAM,SAACE,GAAD,OAAUD,EAAGxF,EAAEyF,EAAK,OAI1BrB,EAAeuC,GAAe7G,EAAWyF,GAHjC,SAACE,GAAD,OAAUD,EAAGxF,EAAEyF,EAAK,UAEV,8FAGlBtB,EAAc,mCACjBiF,GAAgB7D,KAGnB,OACE,qBAAKvI,UAAU,iBAAf,SACKkH,EAAmBpE,EAAWqE,EAAYC,GAAa,QCwBjDiF,GAxCO,SAAC9D,GAGnB,IASMsC,EAAcjD,EAAcW,EAAI,KAAK,WAAW,GAAG,eATlC,CACnB,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,sBAaEuC,EAAYlD,EAAcW,EAAI,KAAK,WAAW,GAAG,eATlC,CACjB,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,qBAUE+D,EAAU9B,GAAkBjC,EAAI,KAAK,WAAW,GAAG,eAAe,YALvD,CACbuC,EACAD,IAKJ,OACI,mCACI,+BAAOyB,OCdJlJ,eAAgB,CAAC,eAAjBA,EAlBK,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,EAAEF,EAAiB,EAAjBA,WAChByF,EAAM,SAACE,GAAD,OAAUD,EAAGxF,EAAEyF,EAAK,OAI1BrB,EAAeuC,GAAe7G,EAAWyF,GAHjC,SAACE,GAAD,OAAUD,EAAGxF,EAAEyF,EAAK,UAEV,8FAGlBtB,EAAc,mCACjBkF,GAAc9D,KAGjB,OACE,qBAAKvI,UAAU,iBAAf,SACKkH,EAAmBpE,EAAWqE,EAAYC,GAAa,QCEjDmF,GApBA,SAAChE,GAeZ,OAFiBX,EAAcW,EAAI,KAAK,WAAW,GAAG,eAXpC,CACd,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,aCYOnF,kBAlBA,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,EAAEF,EAAiB,EAAjBA,WACXyF,EAAM,SAACE,GAAD,OAAUD,EAAGxF,EAAEyF,EAAK,OAI1BrB,EAAeuC,GAAe7G,EAAWyF,GAHjC,SAACE,GAAD,OAAUD,EAAGxF,EAAEyF,EAAK,UAEV,8FACiD,GAAM,GAEzEtB,EAAc,mCACjBoF,GAAOhE,KAGV,OACE,qBAAKvI,UAAU,iBAAf,SACKkH,EAAmBpE,EAAWqE,EAAYC,GAAa,QCHjDoF,GAfS,SAACjE,GAUrB,OAFmBX,EAAcW,EAAI,KAAK,WAAW,GAAG,eANpC,CAChB,YACA,YACA,YACA,eCQOkE,GAdA,SAAClE,GASZ,OAFiBX,EAAcW,EAAI,KAAK,WAAW,GAAG,eALpC,CACd,UACA,UACA,aC8COnF,kBArCJ,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,EAELuF,GAFwB,EAAjBzF,WAED,SAAC2F,GAAD,OAAUD,EAAGxF,EAAEyF,EAAK,QAG1BiE,EAAO,qCACVhB,GAAOnD,GACR,uBACCoD,GAAQpD,GACT,+BAAOgE,GAAOhE,KACd,+BAAOD,EAAUC,KACjB,+BAAOqC,GAAWrC,KAClB,+BAAOsD,GAAatD,KACpB,+BAAOiE,GAASjE,KAChB,+BAAOkE,GAAOlE,KACd,+BAAOgC,GAAWhC,QAIdoE,EAAkBhD,GAAe,QAAQpB,GAhBjC,SAACE,GAAD,OAAUD,EAAGxF,EAAEyF,EAAK,UAeV,8FACiD,GAAK,GAE9E,OACE,sBAAKzI,UAAU,sCAAf,UACE,sBAAMA,UAAU,eAAhB,SACK2M,IAEL,sBAAM3M,UAAU,eAAhB,SACK8L,GAAY,aAAaY,KAE9B,sBAAM1M,UAAU,eAAegC,MAAO,CAAC4K,QAAQ,SAA/C,SACKD,UC9BIE,GAdM,SAACC,GASlB,OAFmBlF,EAAckF,EAAM,KAAK,WAAW,GAAG,eALvC,CACf,aACA,MCeO1J,kBAdI,SAAC,GAAqB,IAApBJ,EAAmB,EAAnBA,EAAEF,EAAiB,EAAjBA,WAGfqE,EAAc,mCACjB0F,IAHS,SAACpE,GAAD,OAAUD,EAAGxF,EAAEyF,EAAK,aAMhC,OACE,qBAAKzI,UAAU,kCAAf,SACK8L,GAAahJ,EAAWqE,QCwClB4F,G,uKA7BH,IAAD,OAEP,OACE,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOnL,OAAK,EAACtB,KAAK,2BAA2B0M,OAAQ,kBAAO,cAAC,GAAD,CAAYlK,WAAY,EAAKL,MAAMK,gBAC/F,cAAC,IAAD,CAAOlB,OAAK,EAACtB,KAAK,uBAAuB0M,OAAQ,kBAAO,cAAC,GAAD,CAAYlK,WAAY,EAAKL,MAAMK,gBAC3F,cAAC,IAAD,CAAOlB,OAAK,EAACtB,KAAK,kBAAkB0M,OAAQ,kBAAO,cAAC,GAAD,CAAYlK,WAAY,EAAKL,MAAMK,gBACtF,cAAC,IAAD,CAAOlB,OAAK,EAACtB,KAAK,8BAA8B0M,OAAQ,kBAAO,cAAC,GAAD,CAAqBlK,WAAY,EAAKL,MAAMK,gBAC3G,cAAC,IAAD,CAAOlB,OAAK,EAACtB,KAAK,qBAAqB0M,OAAQ,kBAAO,cAAC,GAAD,CAAalK,WAAY,EAAKL,MAAMK,gBAC1F,cAAC,IAAD,CAAOlB,OAAK,EAACtB,KAAK,gBAAgB0M,OAAQ,kBAAO,cAAC,GAAD,CAAQlK,WAAY,EAAKL,MAAMK,gBAChF,cAAC,IAAD,CAAOlB,OAAK,EAACtB,KAAK,oBAAoB0M,OAAQ,kBAAO,cAAC,GAAD,CAAYlK,WAAY,EAAKL,MAAMK,gBACxF,cAAC,IAAD,CAAOlB,OAAK,EAACtB,KAAK,mBAAmB0M,OAAQ,kBAAO,cAAC,GAAD,CAAWlK,WAAY,EAAKL,MAAMK,gBACtF,cAAC,IAAD,CAAOlB,OAAK,EAACtB,KAAK,2BAA2B0M,OAAQ,kBAAO,cAAC,GAAD,CAAYlK,WAAY,EAAKL,MAAMK,gBAC/F,cAAC,IAAD,CAAOlB,OAAK,EAACtB,KAAK,oBAAoB0M,OAAQ,kBAAO,cAAC,GAAD,CAAYlK,WAAY,EAAKL,MAAMK,gBACxF,cAAC,IAAD,CAAOlB,OAAK,EAACtB,KAAK,kBAAkB0M,OAAQ,kBAAO,cAAC,GAAD,CAAYlK,WAAY,EAAKL,MAAMK,gBACtF,cAAC,IAAD,CAAOlB,OAAK,EAACtB,KAAK,sBAAsB0M,OAAQ,kBAAO,cAAC,GAAD,CAAclK,WAAY,EAAKL,MAAMK,gBAC5F,cAAC,IAAD,CAAOlB,OAAK,EAACtB,KAAK,eAAe0M,OAAQ,kBAAO,cAAC,GAAD,CAAYlK,WAAY,EAAKL,MAAMK,gBACnF,cAAC,IAAD,CAAOlB,OAAK,EAACtB,KAAK,eAAe0M,OAAQ,kBAAO,cAAC,GAAD,CAAOlK,WAAY,EAAKL,MAAMK,gBAC9E,cAAC,IAAD,CAAOlB,OAAK,EAACtB,KAAK,iBAAiB0M,OAAQ,kBAAO,cAAC,GAAD,CAASlK,WAAY,EAAKL,MAAMK,gBAClF,cAAC,IAAD,CAAOlB,OAAK,EAACtB,KAAK,YAAY0M,OAAQ,kBAAO,cAAC,GAAD,CAAIlK,WAAY,EAAKL,MAAMK,gBACxE,cAAC,IAAD,CAAOlB,OAAK,EAACtB,KAAK,iBAAiB0M,OAAQ,kBAAO,cAAC,GAAD,CAASlK,WAAY,EAAKL,MAAMK,gBAClF,cAAC,IAAD,CAAOlB,OAAK,EAACtB,KAAK,UAAU0M,OAAQ,kBAAO,cAAC,GAAD,CAAMlK,WAAY,EAAKL,MAAMK,gBACxE,cAAC,IAAD,CAAOxC,KAAK,GAAG0M,OAAQ,kBAAO,cAAC,GAAD,CAAUlK,WAAY,EAAKL,MAAMK,yB,GAzB3CI,IAAMC,WCTrB8J,G,oLAXS3K,EAAWC,GAC/B,OAAOC,KAAKC,MAAMC,cAAcJ,EAAWE,KAAKC,S,+BAIhD,OACE,cAAC,GAAD,CAAiBpC,OAAQmC,KAAKC,MAAMpC,OAAQyC,WAAYN,KAAKC,MAAMK,iB,GAP7CI,IAAMC,W,SCgCnB+J,G,oLA/BW5K,EAAWC,GAC/B,OAAOC,KAAKC,MAAMC,cAAcJ,EAAWE,KAAKC,S,+BAI9C6D,QAAQC,IAAI,sBAEZ,IACM4G,EAAgB,wKAgBtB,MAdwB,OAApB3K,KAAKC,MAAMpC,OACC,eAAC,KAAD,WACZ,sBAAM8E,KAAK,OACX,sBAAM1D,KAAK,cAAc/B,QAAQ,uHACjC,sBAAM+B,KAAK,WAAW/B,QAASyN,EAAc,mFAGjC,eAAC,KAAD,WACZ,sBAAMhI,KAAK,OACX,sBAAM1D,KAAK,cAAc/B,QAAQ,6IACjC,sBAAM+B,KAAK,WAAW/B,QAASyN,EAAc,iG,GAtB3BjK,IAAMC,WCH9BiK,GAAuB,WACzB,IAAMC,EAAGpM,OAAOqM,OAAOjC,MACjBkC,EAAItM,OAAOqM,OAAO5J,OAEpB8J,EAAa,GAqBjB,MAVmB,QATjBA,EADEH,EAAI,IACO,KACJA,EAAI,IACA,KACJA,EAAI,KACA,KAEA,OAG2B,OAAfG,GACN,IAbDD,EAAEF,EAcP,QAEA,QAGJ,UCwDAI,G,kDA3Db,WAAYhL,GAAQ,IAAD,sBACjB,cAAMA,GACN,IAAMK,EAAasK,KAFF,OAGjB,EAAKM,MAAQ,CACX5K,WAAYA,GAJG,E,gEAQE,IAAD,OACd,wBAAyB7B,QAC3BA,OAAO0M,iBACL,qBACA,WAEE,IAAMC,EAAoBR,KAC1B,EAAKS,SAAS,CACZ/K,WAAY8K,OAGhB,K,+BAQJ,OACE,qCACE,cAAC,GAAD,CAAiBvN,OAAQmC,KAAKC,MAAMpC,OAAQqC,cAAeuE,IAC3D,cAAC,EAAD,CACE5G,OAAQmC,KAAKC,MAAMpC,OACnBD,KAAMoC,KAAKC,MAAMrC,KACjBE,KAAMkC,KAAKC,MAAMnC,KACjBwC,WAAYN,KAAKkL,MAAM5K,WACvBJ,cAAemE,IAEjB,qBAAK5D,GAAG,UAAUjD,UAAU,UAA5B,SACI,eAAC,IAAD,WAbkB,GAehB,cAAC,GAAD,CACEM,KAAK,UACLwC,WAAYN,KAAKkL,MAAM5K,WACvBJ,cAAesE,EACf3G,OAAQmC,KAAKC,MAAMpC,cAK3B,cAAC,EAAD,CACEA,OAAQmC,KAAKC,MAAMpC,OACnBqC,cAAeqE,EACfjE,WAAYN,KAAKkL,MAAM5K,oB,GAtDTI,IAAMC,WCef2K,GAxBU,SAAC1N,EAAK2N,GAC7B,IAEMC,EAFWD,EAAYE,UACdF,EAAYG,OAAOH,EAAYI,MAE1CC,EAAYhO,EAAKiO,UAAYpN,OAAOqN,aAAaC,WACjDC,EAbc,SAAClO,GAKnB,OAJYA,EAAKmO,MAAM,KACDC,QAAO,SAASC,GAAK,MAAa,KAANA,KAC9BD,QAAO,SAASC,GAAK,MAAa,MAANA,KAC9BD,QAAO,SAASC,GAAK,MAAa,MAANA,KASlCC,CAAYZ,GACxB1H,QAAQC,IAAI,WAAWiI,GACvB,IAAInO,EAAUmO,EAAMvG,QAEL,OAAX5H,GAA8B,OAAXA,IACrBiG,QAAQuI,MAAM,uBAAuBxO,EAAO,mBAAmB+N,GAC/D/N,EAAO+N,GAET,IAAMU,EAAW,CAAC,GAAG,IAAIzO,GAAQ0O,OAAOP,GAAOO,OAAO,IACtDzI,QAAQC,IAAI,WAAWuI,GACvB,IAAME,EAAUF,EAASG,KAAK,KAM9B,OALGD,IAAUhB,IACX1H,QAAQuI,MAAM,mBAAmBb,EAAa,mBAAmBgB,GACjE/N,OAAOC,QAAQC,aAAa,KAAM,GAAI6N,IAGjC,CAAC3O,OAAOA,EAAOC,KADT,CAAC,IAAIyO,OAAOP,GAAOO,OAAO,IACPE,KAAK,KAAKC,cAbzB,ICEJC,GAdG,SAAC,GAAY,IAAX/O,EAAU,EAAVA,KAEVwD,EAAW3C,OAAO2C,SAFE,EAGSkK,GAAiB1N,EAAKwD,GAAlDvD,EAHmB,EAGnBA,OAAOC,EAHY,EAGZA,KAAK4O,EAHO,EAGPA,aAEnB,OACE,qBAAKjM,GAAG,iBAAR,SACI,cAAC,GAAD,CACE7C,KAAMA,EAAMC,OAAQA,EAAQC,KAAMA,EAAM4O,aAAcA,O,0aCsC5DE,GAAU,CAEdC,MAAO,CAAC,OAAQ,cAAe,SAAU,eAAgB,kBAGzDC,kBAAmB,MACnBC,aAAc,UACdC,mBAAoB,aACpBC,qBAAsB,aACtBC,oBAAqB,EACrBC,yBAA0B,EAG1BC,OAAQ,CAAC,eAAgB,UACzBC,gBAAiB,CAAC,UAGlBC,cAAe,GACfC,aAAc,WAGdC,QAAS/K,SAASC,gBAGlB+K,cAAe,CAAE3P,KAAM,IAAK4P,SAAU,WAGxC9P,KAGG+P,IAAIC,MAEJD,IAAIE,MAGJC,KAAK,CACJC,UAAW,CAAC,KAAM,MAClBC,YAAa,KACbC,OAAO,EAEPC,UAAWtB,GAEXuB,cAAe,CACbC,aAAa,GAEfC,UAAW,CACTC,GAAI,CACFC,QAASC,GACTC,oBAAqBC,GACrBC,UAAWC,GACXC,kBAAmBC,GACnBnG,WAAYoG,GACZC,KAAMC,GACNC,SAAUC,GACVC,QAASC,GACTC,SAAUC,GACVC,aAAcC,GACdC,OAAQC,GACRC,aAAcC,GACdC,gBAAiBC,GACjBC,MAAOC,GACPC,MAAOC,GACPC,iBAAkBC,GAClBC,YAAaC,GACbC,KAAMC,GACNC,GAAIC,GACJC,WAAYC,IAEdC,GAAI,CACFvC,QAASwC,GACTtC,oBAAqBuC,GACrBrC,UAAWsC,GACXpC,kBAAmBqC,GACnBvI,WAAYwI,GACZnC,KAAMoC,GACNlC,SAAUmC,GACVjC,QAASkC,GACThC,SAAUiC,GACV/B,aAAcgC,GACd9B,OAAQ+B,GACR7B,aAAc8B,GACd5B,gBAAiB6B,GACjB3B,MAAO4B,GACP1B,MAAO2B,GACPzB,iBAAkB0B,GAClBxB,YAAayB,GACbvB,KAAMwB,GACNtB,GAAIuB,GACJrB,WAAYsB,OAKLtU,UAAf,ECxHegD,eAAgB,eAAhBA,EAdH,WAGR,OACE,cAACuR,GAAA,EAAD,UACE,cAAC,KAAD,CAAgBC,QAJE,GAIlB,SACE,cAAC,IAAD,CAAgBC,SAAS,MAAzB,SACE,cAAC,GAAD,CAAWzU,KAAMA,cCJT0U,QACW,cAA7B7T,OAAO2C,SAASmR,UAEe,UAA7B9T,OAAO2C,SAASmR,UAEhB9T,OAAO2C,SAASmR,SAASC,MACvB,2D,cCVNC,IAASjI,OACP,mCACI,cAAC,GAAD,MAEJ/H,SAASiQ,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA5G,GACLvI,QAAQuI,MAAMA,EAAM6G,a","file":"static/js/main.277aa917.chunk.js","sourcesContent":["import React from 'react'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nconst MainDropDownMenu = ({\r\n    buttonText, content, menuClassName, buttonClassName, contentClassName, buttonTextClassName\r\n}) => {\r\n\r\n    return (\r\n        <>\r\n        <Dropdown className={menuClassName}>\r\n          <Dropdown.Toggle className={buttonClassName}>\r\n        <span className={buttonTextClassName}>{buttonText}</span>\r\n          </Dropdown.Toggle>\r\n          <Dropdown.Menu className={contentClassName}>\r\n            {content}\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainDropDownMenu;\r\n\r\n","import React from 'react';\r\nimport MainDropDownMenu from '../../components/menus/MainDropDownMenu';\r\nimport {Dropdown} from 'react-bootstrap'\r\n\r\nconst LangMenu = (menuClassName,i18n,locale,path) => {\r\n\r\n    const changeLanguage = (lng) => {\r\n      window.history.replaceState(null, {}, '/?/'+lng+\"/\"+path)\r\n      i18n.changeLanguage(lng);\r\n    };\r\n \r\n    const langs = [\"en\",\"es\"];\r\n    const langNames = [\"English\",\"Español\"];\r\n\r\n    const currLangIndex = langs.findIndex(element => element === locale);\r\n    const currLang = langNames.splice(currLangIndex,1);\r\n    langs.splice(currLangIndex,1);\r\n\r\n    const buttonText = <><i className=\"text-white las la-globe mr-1\"></i><span>{currLang}</span></>;\r\n    const buttonClassName = \"btn btn-sm dropdown-toggle menubutton btnWithColor btn-outline-light pt-0 pb-0 dropdown-toggle btn btn-primary\";\r\n    const buttonTextClassName = \"small\";\r\n    const contentClassName = \"btn-sm small nicedarkbluebackground dropdown-menu\";\r\n    const NavClassName = \"small dropdown-item-hover\";\r\n    const linkTextClassName=\"small\";\r\n\r\n    const content = <>\r\n      <Dropdown.Item className={NavClassName} onClick={() => changeLanguage(langs[0])}><span className={linkTextClassName}>{langNames[0]}</span></Dropdown.Item>\r\n    </>\r\n\r\n    return(\r\n      <>\r\n      <MainDropDownMenu \r\n      buttonText={buttonText}\r\n      content={content}\r\n      menuClassName={menuClassName}\r\n      buttonClassName={buttonClassName}\r\n      contentClassName={contentClassName}\r\n      buttonTextClassName={buttonTextClassName}\r\n       />\r\n      </>\r\n    )\r\n}\r\n\r\nexport default LangMenu;\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nconst DropdownNavLink = ({\r\n    locale,activeClassName,NavClassName,route,name,linkTextClassName\r\n}) => {\r\n    return (\r\n        <Dropdown.Item as=\"span\" className=\"bootstrap-override\">\r\n        <NavLink activeClassName={activeClassName}\r\n           className={NavClassName}\r\n           exact to={\"/\"+locale+route}><span className={linkTextClassName}>{name}</span></NavLink>\r\n        </Dropdown.Item>\r\n    )\r\n}\r\n\r\nexport default DropdownNavLink; \r\n","import React from 'react';\r\nimport DropdownNavLink from '../../components/menus/DropdownNavLink';\r\nimport MainDropDownMenu from '../../components/menus/MainDropDownMenu';\r\n\r\nconst ExperienceMenu = (mainT,menuClassName,locale) => {\r\n\r\n    const buttonText = mainT(\"experience\");\r\n    const buttonClassName = \"btn btn-sm dropdown-toggle menubutton btnWithColor btn-outline-light pt-0 pb-0 dropdown-toggle btn btn-primary\";\r\n    const buttonTextClassName = \"small\";\r\n    const contentClassName = \"nicedarkbluebackground dropdown-menu\";\r\n    const NavClassName = \"small dropdown-item-hover\";\r\n    const linkTextClassName=\"small\";\r\n\r\n    const content = <>\r\n      <DropdownNavLink  route={\"/workprofile\"} name={mainT(\"workprofile\")} linkTextClassName={linkTextClassName} activeClassName={\"active\"} NavClassName={NavClassName} locale={locale} /> \r\n      <hr className=\"mt-1 mb-1 m-0 p-0\" style={{borderColor:'white'}} />\r\n      <DropdownNavLink  route={\"/experience\"} name={mainT(\"experience\")} linkTextClassName={linkTextClassName} activeClassName={\"active\"} NavClassName={NavClassName} locale={locale} /> \r\n      <DropdownNavLink  route={\"/education\"} name={mainT(\"education\")} linkTextClassName={linkTextClassName} activeClassName={\"active\"} NavClassName={NavClassName} locale={locale} /> \r\n      <hr className=\"mt-1 mb-1 m-0 p-0\" style={{borderColor:'white'}} />\r\n      <DropdownNavLink  route={\"/cv\"} name={mainT(\"cv\")} linkTextClassName={linkTextClassName} activeClassName={\"active\"} NavClassName={NavClassName} locale={locale} /> \r\n      <DropdownNavLink  route={\"/references\"} name={mainT(\"references\")} linkTextClassName={linkTextClassName} activeClassName={\"active\"} NavClassName={NavClassName} locale={locale} /> \r\n      <hr className=\"mt-1 mb-1 m-0 p-0\" style={{borderColor:'white'}} />\r\n      <DropdownNavLink  route={\"/story\"} name={mainT(\"mystory\")} linkTextClassName={linkTextClassName} activeClassName={\"active\"} NavClassName={NavClassName} locale={locale} /> \r\n    </>\r\n\r\n    return(\r\n      <MainDropDownMenu \r\n      buttonText={buttonText}\r\n      content={content}\r\n      menuClassName={menuClassName}\r\n      buttonClassName={buttonClassName}\r\n      contentClassName={contentClassName}\r\n      buttonTextClassName={buttonTextClassName}\r\n       />\r\n    )\r\n}\r\n\r\nexport default ExperienceMenu;\r\n","import React from 'react';\r\nimport DropdownNavLink from '../../components/menus/DropdownNavLink';\r\nimport MainDropDownMenu from '../../components/menus/MainDropDownMenu';\r\n\r\nconst ProductsServices = (mainT,menuClassName,locale) => {\r\n\r\n    const buttonText = mainT(\"p_s\");\r\n    const buttonClassName = \"btn btn-sm dropdown-toggle menubutton btnWithColor btn-outline-light pt-0 pb-0 dropdown-toggle btn btn-primary\";\r\n    const buttonTextClassName = \"small\";\r\n    const contentClassName = \"nicedarkbluebackground dropdown-menu\";\r\n    const NavClassName = \"small dropdown-item-hover\";\r\n    const linkTextClassName=\"small\";\r\n\r\n    const content = <>\r\n      <DropdownNavLink  route={\"/workprofile\"} name={mainT(\"workprofile\")} linkTextClassName={linkTextClassName} activeClassName={\"active\"} NavClassName={NavClassName} locale={locale} /> \r\n      <hr className=\"mt-1 mb-1 m-0 p-0\" style={{borderColor:'white'}} />\r\n      <DropdownNavLink  route={\"/skills\"} name={mainT(\"myskills\")} linkTextClassName={linkTextClassName} activeClassName={\"active\"} NavClassName={NavClassName} locale={locale} /> \r\n      <hr className=\"mt-1 mb-1 m-0 p-0\" style={{borderColor:'white'}} />\r\n      <DropdownNavLink  route={\"/software/free\"} name={mainT(\"software\") + \" (\" + mainT(\"freecontent\") + \")\"} linkTextClassName={linkTextClassName} activeClassName={\"active\"} NavClassName={NavClassName} locale={locale} /> \r\n      <DropdownNavLink  route={\"/software\"} name={mainT(\"software\") + \" (\" + mainT(\"premium\") + \")\"} linkTextClassName={linkTextClassName} activeClassName={\"active\"} NavClassName={NavClassName} locale={locale} /> \r\n      <DropdownNavLink  route={\"/datascience/packages\"} name={mainT(\"datapackages\")} linkTextClassName={linkTextClassName} activeClassName={\"active\"} NavClassName={NavClassName} locale={locale} /> \r\n      <DropdownNavLink  route={\"/repositories\"} name={mainT(\"repositories\")} linkTextClassName={linkTextClassName} activeClassName={\"active\"} NavClassName={NavClassName} locale={locale} /> \r\n    </>\r\n\r\n    return(\r\n      <MainDropDownMenu \r\n      buttonText={buttonText}\r\n      content={content}\r\n      menuClassName={menuClassName}\r\n      buttonClassName={buttonClassName}\r\n      contentClassName={contentClassName}\r\n      buttonTextClassName={buttonTextClassName}\r\n       />\r\n    )\r\n}\r\n\r\nexport default ProductsServices;\r\n","import React from 'react';\r\nimport DropdownNavLink from '../../components/menus/DropdownNavLink';\r\nimport MainDropDownMenu from '../../components/menus/MainDropDownMenu';\r\n\r\nconst ProjectsMenu = (mainT,menuClassName,locale) => {\r\n\r\n    const buttonText = mainT(\"projects\");\r\n    const buttonClassName = \"btn btn-sm dropdown-toggle menubutton btnWithColor btn-outline-light pt-0 pb-0 dropdown-toggle btn btn-primary\";\r\n    const buttonTextClassName = \"small\";\r\n    const contentClassName = \"nicedarkbluebackground dropdown-menu\";\r\n    const NavClassName = \"small dropdown-item-hover\";\r\n    const linkTextClassName=\"small\";\r\n\r\n    const content = <>\r\n      <DropdownNavLink  route={\"/projects\"} name={mainT(\"projects\")} linkTextClassName={linkTextClassName} activeClassName={\"active\"} NavClassName={NavClassName} locale={locale} /> \r\n      <DropdownNavLink  route={\"/entrepreneurships\"} name={mainT(\"entrepreneurships\")} linkTextClassName={linkTextClassName} activeClassName={\"active\"} NavClassName={NavClassName} locale={locale} />  \r\n      <DropdownNavLink  route={\"/software/upcoming\"} name={mainT(\"upcomingapps\")} linkTextClassName={linkTextClassName} activeClassName={\"active\"} NavClassName={NavClassName} locale={locale} /> \r\n    </>\r\n\r\n    return(\r\n      <MainDropDownMenu \r\n      buttonText={buttonText}\r\n      content={content}\r\n      menuClassName={menuClassName}\r\n      buttonClassName={buttonClassName}\r\n      contentClassName={contentClassName}\r\n      buttonTextClassName={buttonTextClassName}\r\n       />\r\n    )\r\n}\r\n\r\nexport default ProjectsMenu;\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst HomeLink = (mainT,locale) => {\r\n    return(\r\n        <NavLink activeClassName={\"active\"}\r\n           className={\"\"}\r\n           exact to={\"/\"+locale}><h2 className=\"App-brand navmaintext p-0 m-0\">{mainT(\"dnportfolio\")}</h2></NavLink>\r\n\r\n    )\r\n}\r\n\r\nexport default HomeLink;\r\n\r\n","import React from 'react';\r\nimport LangMenu from './menus/LangMenu';\r\nimport ExperienceMenu from './menus/ExperienceMenu';\r\nimport ProductsServices from './menus/ProductsServices';\r\nimport ProjectsMenu from './menus/ProjectsMenu';\r\nimport HomeLink from './menus/HomeLink';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nclass NavbarTop extends React.Component {\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return this.props.AllowReRender(nextProps, this.props);\r\n  }\r\n\r\n  render() {\r\n\r\n    const menuClassName =\r\n      'nav-item dropdown m-0  mainmenuitem';\r\n\r\n    let preZone = \"\"\r\n    let postZone = \"\"\r\n    let lowerMenusWidth = 2\r\n\r\n    if (this.props.screenType === 'miniV') {\r\n      lowerMenusWidth = 4\r\n      preZone= <>\r\n        <div className=\"col-9 text-center  m-0 p-0 d-inline\" style={{ minHeight: '24px' }}>\r\n          {HomeLink(this.props.t,this.props.locale)}\r\n        </div>\r\n        <div className=\"col-3 text-center  m-0 p-0 d-inline\" style={{ minHeight: '24px' }}>\r\n          {LangMenu(menuClassName, this.props.i18n,this.props.locale,this.props.path)}\r\n        </div>\r\n      </>\r\n    } else {\r\n      preZone= <div className=\"col-4 text-center  m-0 p-0 d-inline\" style={{ minHeight: '24px' }}>\r\n        {HomeLink(this.props.t,this.props.locale)}\r\n      </div>\r\n      postZone = <div className=\"col-2 text-center  m-0 p-0 d-inline\" style={{ minHeight: '24px' }}>\r\n        {LangMenu(menuClassName, this.props.i18n, this.props.locale,this.props.path)}\r\n      </div>\r\n    }\r\n\r\n    return (\r\n      <div id=\"header\" className=\"m-0 p-0\">\r\n        <nav\r\n          className=\"navbar navbar-expand-md navbar-dark nicedarkbluebackground m-0 p-0 \"\r\n          style={{ minHeight: '24px' }}\r\n        >\r\n          <div className=\"container-fluid text-center m-0 p-0\">\r\n            <div className=\"nicedarkbluebackground row w-100 text-center  small align-middle p-0 m-0  w-100\">\r\n              {preZone}\r\n              <div className={\"col-\"+lowerMenusWidth+\" text-center  m-0 p-0 d-inline\"} style={{ minHeight: '24px' }}>\r\n                {ExperienceMenu(this.props.t,menuClassName,this.props.locale)}\r\n              </div>\r\n              <div className={\"col-\"+lowerMenusWidth+\" text-center  m-0 p-0 d-inline\"} style={{ minHeight: '24px' }}>\r\n                {ProductsServices(this.props.t,menuClassName,this.props.locale)}\r\n              </div>\r\n              <div className={\"col-\"+lowerMenusWidth+\" text-center  m-0 p-0 d-inline\"} style={{ minHeight: '24px' }}>\r\n                {ProjectsMenu(this.props.t,menuClassName,this.props.locale)}\r\n              </div>\r\n              {postZone}\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation(['main'])(NavbarTop);","import React from 'react'\r\n\r\nconst FontIcon = (iconSize,spanClass,iconName) => {\r\n    if(spanClass!==\"\")\r\n        spanClass=\" \"+spanClass\r\n    return (\r\n        <span className={\"reficon\"+spanClass}><i className={iconName+\" \"+iconSize}></i></span>\r\n    )\r\n}\r\n\r\nexport default FontIcon;","import React from 'react';\r\n\r\nconst Logoicon = (className,height) => {\r\n    return (\r\n        <img\r\n            className={className}\r\n            src={window.location.origin + \"/img/logo.png\"}\r\n            alt=\"Digital MedTools Logo\"\r\n            style={{ height: height }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Logoicon;\r\n","import React from 'react';\r\nimport Logoicon from '../../components/commons/Logoicon'\r\n\r\nconst AppIcon = (locale) => {\r\n  return (\r\n    <a\r\n      className=\"App-brand text-center small m-0 p-0 pl-2\"\r\n      href=\"http://www.digitalmedtools.com\"\r\n    >\r\n      {Logoicon(\"p-0\",'17px')}\r\n      <span className=\"copperplate m-0\">\r\n        Digital Medtools\r\n      </span>\r\n      \r\n    </a>\r\n  );\r\n};\r\n\r\nexport default AppIcon;\r\n","import React from 'react';\r\nimport fontIcon from '../../components/text/FontIcon';\r\nimport AppIcon from './AppIcon';\r\n\r\nconst FollowUsMenu = (t, screenType) => {\r\n  const textclass = 'align-middle text-center small';\r\n  let iconSize = 'la-lg';\r\n  if (screenType !== 'miniV') {\r\n    iconSize = 'la-lg';\r\n  }\r\n\r\n  const title = <span className={textclass}>{t('moreaboutme')}</span>;\r\n\r\n  const iconClassName = \"pl-1 iconlink\"\r\n  \r\n\r\n  const icons = (\r\n    <>\r\n      <a href=\"https://www.linkedin.com/in/nietodaniel-apps/\" className={iconClassName}>{fontIcon(iconSize,\"pl-2\",\"la la-linkedin\")}</a>\r\n      <a href=\"https://github.com/nietodaniel/\" className={iconClassName}>{fontIcon(iconSize,\"pl-2\",\"la la-github\")}</a>\r\n      {AppIcon()}\r\n    </>\r\n  );\r\n\r\n  let content = \"\";\r\n  if (screenType === 'miniV') {\r\n    content = (\r\n      <>\r\n        <span className=\"d-table-row w-100 small\">{title}</span>\r\n        <span className=\"d-table-row\">{icons}</span>\r\n      </>\r\n    );\r\n  } else {\r\n    content = (\r\n      <>\r\n        <span>{title}</span>\r\n        <span>{icons}</span>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <span className=\"text-white  d-block\">\r\n        {content}\r\n    </span>\r\n  )\r\n};\r\n\r\nexport default FollowUsMenu;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst MenuNavLink = ({\r\n    locale,activeClassName,NavClassName,route,name,linkTextClassName\r\n}) => {\r\n    return (\r\n        <NavLink as=\"span\" activeClassName={activeClassName}\r\n           className={NavClassName}\r\n           exact to={\"/\"+locale+route}><span className={linkTextClassName}>{name}</span></NavLink>\r\n    )\r\n}\r\n\r\nexport default MenuNavLink; \r\n","import React from 'react'\r\nimport MenuNavLink from '../../components/buttons/MenuNavLink';\r\n\r\nconst PrivacyMenu = (t,screenType,locale) => {\r\n\r\n    const NavClassName = \"linktext pr-2\";\r\n    \r\n    let addClass = \"\";\r\n    if(screenType!==\"normal\"){\r\n        addClass = \"small \";\r\n    }\r\n\r\n    const rights = <>\r\n        <span className={addClass+\" pr-1\"}>{t(\"rights\")}</span>\r\n    </>\r\n\r\n    const TermsNpolicies = <>\r\n        <MenuNavLink  route={\"/terms\"} name={t(\"terms\")} linkTextClassName={addClass} activeClassName={\"active\"} NavClassName={NavClassName} locale={locale} /> \r\n        <MenuNavLink  route={\"/privacy\"} name={\"• \"+t(\"privacy\")} linkTextClassName={addClass} activeClassName={\"active\"} NavClassName={NavClassName} locale={locale} /> \r\n        <MenuNavLink  route={\"/cookies\"} name={\"• \"+t(\"cookies\")} linkTextClassName={addClass} activeClassName={\"active\"} NavClassName={NavClassName} locale={locale} /> \r\n    </>\r\n\r\n    let content = \"\"\r\n\r\n\r\n    if(screenType!==\"normal\"){\r\n        content = <>\r\n            <span className=\"d-table-row\">{rights}</span>\r\n            <span className=\"d-table-row\">{TermsNpolicies}</span>\r\n        </>\r\n    }else{\r\n        content = <>\r\n            <span>{rights}</span>\r\n            <span>{TermsNpolicies}</span>\r\n        </>\r\n    }\r\n\r\n    return (\r\n        <span className=\"small text-white d-block\">\r\n            {content}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default PrivacyMenu;\r\n\r\n","import React from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\n\r\nconst DropdownExternalLink = ({\r\n    LinkClassName,href,text,isBlank\r\n}) => {\r\n    let target=\"\"\r\n    if(isBlank===true){\r\n        target=\"_blank\"\r\n    }\r\n\r\n    return (\r\n        <Dropdown.Item as=\"span\" className=\"bootstrap-override\">\r\n        <a className={LinkClassName} href={href} target={target}>{text}</a>\r\n        </Dropdown.Item>\r\n    )\r\n    \r\n}\r\n\r\nexport default DropdownExternalLink; \r\n","const GetLocaleFromHead = () => {\r\n\r\n    return (\r\n        document.documentElement.lang\r\n    )\r\n}\r\n\r\nexport default GetLocaleFromHead;","import GetLocaleFromHead from './GetLocaleFromHead'\r\n\r\nconst LocaleForMarkDownRoute = (txt) => {\r\n\r\n    const locale = GetLocaleFromHead()\r\n    const newtxt = txt.replace(/LOCALESTRING/g, locale)\r\n    return (\r\n        newtxt\r\n    )\r\n}\r\n\r\nexport default LocaleForMarkDownRoute;\r\n","import React from 'react'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport LocaleForMarkDownRoute from '../modules/LocaleForMarkDownRoute'\r\n\r\nconst PRM = (classN,text) => {\r\n\r\n    const txt = LocaleForMarkDownRoute(text)\r\n\r\n    return (\r\n        <ReactMarkdown renderers={{Paragraph: 'span'}} className={classN} source={txt} />\r\n    )\r\n}\r\n\r\nexport default PRM","import React from 'react'\r\nimport DropdownExternalLink from '../../components/menus/DropdownExternalLink';\r\nimport {CelSolid,CelSolidPlus,CelVisual,Email} from '../../components/modules/MyContactInfo';\r\n\r\nconst NavClassName = \"small dropdown-item-hover \"\r\n\r\nconst ContactMenuOptions = (mainT) => {\r\n\r\n  const whatsappButtonContent= <>\r\n    <i className=\"lab la-whatsapp la-lg\" style={{color: '#4ac959'}}></i ><span className=\"small  m-1\">Whatsapp</span>\r\n  </>\r\n\r\n  const callButtonContent= <>\r\n    <i className=\"las la-phone la-lg\" style={{color: '#ffffff'}}></i ><span className=\"small  m-1\">{CelVisual()}</span>\r\n  </>\r\n\r\n  const emailButtonContent= <>\r\n    <i className=\"las la-envelope la-lg\" style={{color: '#ffffff'}}></i ><span className=\"small  m-1\">{\"nieto.daniel221@gmail.com\"}</span>\r\n  </>\r\n  \r\n  const wappURL = \"https://api.whatsapp.com/send?phone=\" + CelSolid() + \"&text=\" + mainT(\"help\")\r\n  const callURL = \"tel:\"+CelSolidPlus()\r\n  const emailURL = \"mailto:\"+Email()\r\n  \r\n  return(\r\n    <>\r\n      <DropdownExternalLink LinkClassName={NavClassName} href={wappURL} text={whatsappButtonContent} isBlank={true} ></DropdownExternalLink>\r\n      <DropdownExternalLink LinkClassName={NavClassName} href={callURL} text={callButtonContent} isBlank={true} ></DropdownExternalLink>\r\n      <DropdownExternalLink LinkClassName={NavClassName} href={emailURL} text={emailButtonContent} isBlank={true} ></DropdownExternalLink>\r\n    </>\r\n    )\r\n}\r\nexport default ContactMenuOptions;","import PRM from '../textProcessor/PRM'\r\n\r\nexport const CelSolid = () => {\r\n\r\n  const cellphone = \"573232350963\"\r\n\r\n  return (\r\n    cellphone\r\n  )\r\n}\r\n\r\nexport const CelVisual = () => {\r\n\r\n  const cellphone = \"+57 323 2350963\"\r\n\r\n  return (\r\n    cellphone\r\n  )\r\n}\r\n\r\nexport const CelSolidPlus = () => {\r\n\r\n  const cellphone = \"+573232350963\"\r\n\r\n  return (\r\n    cellphone\r\n  )\r\n}\r\n\r\nexport const Email = () => {\r\n\r\n  const email = \"nieto.daniel221@gmail.com\"\r\n\r\n  return (\r\n    email\r\n  )\r\n}\r\n\r\nexport const EmailLink = () => {\r\n\r\n  const emailText = \"✉ [\" + Email() + \"](mailto:\"+Email()+\")\"\r\n  return (\r\n    PRM(\"\",emailText)\r\n  )\r\n}\r\n\r\nexport const TelLink = () => {\r\n\r\n  const celText = \"✆ [\"+ CelVisual() + \"](tel:\" + CelSolidPlus() + \")\"\r\n  return (\r\n    PRM(\"\",celText)\r\n  )\r\n}","import React from 'react';\r\nimport MainDropDownMenu from '../../components/menus/MainDropDownMenu';\r\nimport ContactMenuOptions from './ContactMenuOptions'\r\n\r\nconst ContactMenu = (mainT,isTop) => {\r\n    const buttonText = mainT(\"contactme\");\r\n\r\n    let topText =\"ChatTop\"\r\n    if(isTop===false){\r\n      topText=\"ChatBottom\"\r\n    }\r\n\r\n    const menuClassName = \"allowmouse nav-item dropdown m-auto pr-2\";\r\n    const buttonClassName = \"btn btn-sm dropdown-toggle Appbackgroundcolor menubutton btnWithColor btn-outline-light pt-0 pb-0\"\r\n    const buttonTextClassName = \"small p-1\";\r\n    const contentClassName = \"dropdown-menu\"\r\n\r\n    const content = ContactMenuOptions(mainT);\r\n\r\n    return(\r\n      <div id = {topText} className=\"chatbutton\">\r\n      <MainDropDownMenu \r\n      buttonText={buttonText}\r\n      content={content}\r\n      menuClassName={menuClassName}\r\n      buttonClassName={buttonClassName}\r\n      contentClassName={contentClassName}\r\n      buttonTextClassName={buttonTextClassName}\r\n       />\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default ContactMenu;","import React from 'react';\r\nimport FollowUsMenu from './menus/FollowUsMenu';\r\nimport PrivacyMenu from './menus/PrivacyMenu';\r\nimport ContactMenu from './menus/ContactMenu';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nclass NavbarBottom extends React.Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return this.props.AllowReRender(nextProps, this.props);\r\n  }\r\n\r\n  render() {\r\n    console.log('NavBar Bottom re-rendered');\r\n\r\n\r\n    let LowerContactMenu =\"\"\r\n    let UpperContactMenu =\"\"\r\n \r\n    if (this.props.screenType === 'miniV') {\r\n      UpperContactMenu = ContactMenu(\r\n        this.props.t,\r\n        true\r\n      );\r\n      }else{\r\n\r\n      LowerContactMenu = (\r\n        <div className=\"small small col-2 text-center m-auto p-0\">\r\n          <span className=\"d-none d-sm-block\">\r\n            {ContactMenu(this.props.t, false)}\r\n          </span>\r\n          <span> </span>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const overNav = (\r\n      <>\r\n        <div id=\"navchat\" className=\"w-100 container-flex p-0 m-0 ml-2 mr-2\">\r\n          {UpperContactMenu}\r\n        </div>\r\n      </>\r\n    );\r\n\r\n    let colDistributionA = 6;\r\n    let colDistributionB = 4;\r\n    if (this.props.screenType===\"miniV\" ) {\r\n      colDistributionA = 6\r\n      colDistributionB = 6\r\n    }\r\n\r\n    const content = (\r\n      <>\r\n        <div className={\"col-\" + colDistributionA + \" text-center m-auto p-0\"}>\r\n          {FollowUsMenu(this.props.t, this.props.screenType)}\r\n        </div>\r\n        <div className={\"col-\" + colDistributionB + \" text-center m-auto p-0 small\"}>\r\n          {PrivacyMenu(\r\n            this.props.t,\r\n            this.props.screenType,\r\n            this.props.locale\r\n          )}\r\n        </div>\r\n        {LowerContactMenu}\r\n      </>\r\n    );\r\n\r\n    return (\r\n      <footer id=\"footer\" className=\"p-0 m-0 nomouse\">\r\n        {overNav}\r\n        <nav\r\n          className=\"allowmouse nicedarkbluebackground navbar navbar-expand  p-0 m-0\"\r\n          style={{ minHeight: '20px' }}\r\n        >\r\n          <div className=\"container-fluid text-center m-0 pl-2 pr-2\">\r\n            <div className=\"row w-100 text-center  small align-middle p-0 m-0  w-100\">\r\n              {content}\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withTranslation(['main'])(NavbarBottom);\r\n","export const AllowReRenderTopNavBar = (nextProps, currentProps) => {\r\n  if(nextProps.locale!==currentProps.locale)\r\n    return true;\r\n    if(nextProps.path!==currentProps.path)\r\n    return true;\r\n  if(currentProps.screenType!==nextProps.screenType)\r\n    return true;\r\n  return false;\r\n}\r\n\r\nexport const AllowReRenderBottomNavBar = (nextProps, currentProps) => {\r\n  if(nextProps.locale!==currentProps.locale)\r\n    return true;\r\n  if(currentProps.screenType!==nextProps.screenType)\r\n    return true;\r\n  return false;\r\n}\r\n\r\nexport const AllowReRenderContent = (nextProps, currentProps) => {\r\n  if(nextProps.path!==currentProps.path)\r\n    return true;\r\n  if(nextProps.locale!==currentProps.locale)\r\n    return true;\r\n  if(currentProps.screenType!==nextProps.screenType)\r\n    return true;\r\n  return false; \r\n}\r\n\r\nexport const AllowReRenderHelmet = (nextProps, currentProps) => {\r\n  if(nextProps.locale!==currentProps.locale){\r\n    return true;\r\n  }\r\n  return false; \r\n}","import React from 'react'\r\n\r\nconst SideVerticalPanel = (screenType,leftContent,rightContent,inBeginningAndEndMini) => {\r\n\r\n    let containerClass = \"container-fluid m-0 p-0  pr-1 pl-1 h-100\" \r\n\r\n    if (screenType!==\"normal\"){\r\n        containerClass = containerClass + \" small\"\r\n    }\r\n\r\n    let content = \"\"\r\n\r\n    if (screenType === \"normal\" ) {\r\n    content =  <div className=\"row w-100 m-0 p-0 fullheight\">\r\n        <div className={\"p-0 offset-1 col-6 vertical-center \"}>\r\n            <span>{leftContent}</span>\r\n        </div>\r\n        <div className={\"p-0 col-4\"}>\r\n            <span>{rightContent}</span>\r\n        </div>\r\n    </div>\r\n    }else{\r\n        let overPanel =\"\"\r\n        if(inBeginningAndEndMini===true){\r\n            overPanel = <div className={\"p-0 col-12\"}>\r\n                <span>{rightContent}</span>\r\n            </div>\r\n        }\r\n\r\n       if(screenType === \"miniV\"  ){\r\n        content =  <div className=\"row w-100 m-0 p-0\">\r\n            {overPanel}\r\n        <div className={\"p-0 col-12\"}>\r\n            <span>{leftContent}</span>\r\n        </div>\r\n        <div className={\"p-0 col-12\"}>\r\n            <span>{rightContent}</span>\r\n        </div>\r\n    </div>\r\n    }else{\r\n        content =  <div className=\"row w-100 m-0 p-0\">\r\n            {overPanel}\r\n        <div className={\"p-0 col-12\"}>\r\n            <span>{leftContent}</span>\r\n        </div>\r\n        <div className={\"p-0 col-12\"}>\r\n            <span>{rightContent}</span>\r\n        </div>\r\n    </div>\r\n    }\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <div className={containerClass}>\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideVerticalPanel;\r\n","import React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nconst softwarePremium = ({t,screenType }) => { \r\n  return (\r\n    <div>\r\n        {t(\"componentworks\")}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withTranslation(['softwarePremium'])(softwarePremium);","import React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nconst softwareFree = ({t,screenType }) => { \r\n  return (\r\n    <div>\r\n        {t(\"componentworks\")}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withTranslation(['softwareFree'])(softwareFree);","import React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nconst upcomingSoftware = ({t,screenType }) => { \r\n  return (\r\n    <div>\r\n        {t(\"componentworks\")}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withTranslation(['upcomingSoftware'])(upcomingSoftware);","import React from 'react'\r\n\r\nconst SUB = (TagN,classN,text) => {\r\n\r\n    let res = \"empty...\"\r\n\r\n    if(text.length>0){\r\n        res = <TagN className={classN}>{text}</TagN>\r\n    }\r\n\r\n    return (\r\n        res\r\n    )\r\n}\r\n\r\nexport default SUB","import React from 'react'\r\nimport SUB from './SUB';\r\nimport PRM from './PRM'\r\n\r\nconst TransMultiPRM = (t,titletag,titleClassN,paragraphClass,classN,arrText) => {\r\n    const title = arrText.shift();\r\n    let txt = \"\"\r\n\r\n    const lineMaker = (item) => {\r\n        if(txt!==\"\"){\r\n            txt=txt+ \"\\n\\r\"\r\n        }\r\n        txt = txt + t(item)\r\n    }\r\n    \r\n    arrText.forEach((item) =>  {lineMaker(item)});\r\n\r\n    const sub = title && SUB(titletag,titleClassN,t(title))\r\n\r\n    return (\r\n        <>\r\n            <span>{sub}</span>\r\n            <span className={paragraphClass}>{PRM(classN,txt)}</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransMultiPRM","import TransMultiPRM from '../../components/textProcessor/TransMultiPRM';\r\n\r\nconst Education = (tCV) => {\r\n\r\n    const educationArr = [\r\n        \"education0\",\r\n        \"education1\",\r\n        \"education2\",\r\n        \"education3\",\r\n        \"education4\"\r\n      ]\r\n      const education = TransMultiPRM(tCV,\"h2\",\"subtitle\",\"\",\"pl-2 nospace\",educationArr)\r\n\r\n    return (\r\n        education\r\n    )\r\n}\r\n\r\nexport default Education\r\n","const TX = (t,word,resource) => { return(t(resource+':'+word))};\r\n\r\nexport default TX","import React from 'react'\r\nimport Overlay from 'react-bootstrap/Overlay'\r\nimport Tooltip from 'react-bootstrap/Tooltip'\r\nimport { useRef, useState } from \"react\";\r\n\r\nconst LinkWithInfo = (buttonClassName,ButtonText,TooltipText,as,href,isTblank) => {\r\n    const [show, setShow] = useState(false);\r\n    const target = useRef(null);\r\n\r\n    let tblank = \"\"\r\n    if(isTblank===true)\r\n    tblank=\"_blank\"\r\n\r\n    const enterEvent = () =>{\r\n      setShow(true)\r\n    }\r\n\r\n    const exitEvent = () =>{\r\n      setShow(false)\r\n    }\r\n    \r\n    return (\r\n      <>\r\n        <a as={as} ref={target} className={\"infolink \"+buttonClassName} href={href} onMouseEnter={enterEvent} target={tblank} onMouseLeave={exitEvent} >\r\n          {ButtonText}\r\n        </a>\r\n        <Overlay target={target.current} show={show} placement=\"top\">\r\n          {(props) => (\r\n            <Tooltip className=\"\" {...props}>\r\n              {TooltipText}\r\n            </Tooltip>\r\n          )}\r\n        </Overlay>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default LinkWithInfo;","import React from 'react'\r\nimport LinkWithInfo from '../../components/buttons/LinkWithInfo'\r\nimport MainDropDownMenu from '../../components/menus/MainDropDownMenu';\r\nimport ContactMenuOptions from '../../pageframe/menus/ContactMenuOptions';\r\nimport GetLocaleFromHead from '../../components/modules/GetLocaleFromHead';\r\n\r\nconst ContactSnippet = (screenType,tCV,tMain,buttonClassName,hideCV,hideSkills) => {\r\n\r\n    const locale = GetLocaleFromHead()\r\n\r\n    let cvLink = LinkWithInfo(buttonClassName,<span className=\"small p-1\">{tMain(\"viewcv\")}</span>,tMain(\"cv_info\"),\"span\",\"/?/\"+locale+\"/cv/\") \r\n    let mySkills = LinkWithInfo(buttonClassName,<span className=\"small p-1\">{tMain(\"myskills\")}</span>,tMain(\"skills_info\"),\"span\",\"/?/\"+locale+\"/skills/\") \r\n    let downloadpdf = LinkWithInfo(buttonClassName + \" dpdf\",<span className=\"small p-1\">{tMain(\"downloadpdf\")}</span>,tMain(\"download_info\"),\"span\",\"/docs/CV - Daniel Nieto.pdf\",true) \r\n    const menuClassName = \"allowmouse nav-item dropdown m-auto pr-2\";\r\n    const buttonTextClassName = \"small p-0\";\r\n    const contentClassName = \"dropdown-menu\"\r\n    const ContactMe = <>\r\n      <MainDropDownMenu \r\n        buttonText={tMain(\"contactme\")}\r\n        content={ContactMenuOptions(tMain)}\r\n        menuClassName={menuClassName}\r\n        buttonClassName={buttonClassName + \"contactsnippet dropdown-toggle\"}\r\n        contentClassName={contentClassName}\r\n        buttonTextClassName={buttonTextClassName}\r\n      />\r\n    </>\r\n\r\n    const removedNum = (hideCV?1:0) + (hideSkills?1:0)\r\n    let colwidth =4\r\n\r\n    let buttonWrapper =\"\"\r\n    buttonClassName = buttonClassName + \" small\"\r\n\r\n    if (screenType === \"normal\" ) {\r\n      colwidth = 12\r\n      buttonWrapper = (cont) => {\r\n        return <div className={\"col-\" + colwidth + \" text-center table\"}>\r\n          <span  className=\"align-middle\">\r\n            {cont}\r\n          </span>\r\n        </div>\r\n      }\r\n    }else{\r\n      if(removedNum>1)\r\n        colwidth = 6\r\n\r\n      buttonWrapper = (cont) => {\r\n          return <div className={\"col-\" + colwidth + \" text-center\"}>\r\n            <span  className=\"align-middle\">\r\n              {cont}\r\n            </span>\r\n          </div>\r\n        }\r\n        \r\n  }\r\n\r\n\r\n    const res = <div className=\"container-fluid m-0 p-0 mt-1 vertical-center h-100\">\r\n      <div className=\"row w-100 m-0 p-0\">\r\n        {!hideCV && buttonWrapper(cvLink)}\r\n        {!hideSkills && buttonWrapper(mySkills)}\r\n        {buttonWrapper(ContactMe)}\r\n        {(removedNum===2) && buttonWrapper(downloadpdf)}\r\n      </div>\r\n    </div>\r\n\r\n    return res\r\n\r\n\r\n}\r\n\r\nexport default ContactSnippet\r\n","import React from 'react';\r\nimport SideVerticalPanel from '../../components/panels/SideVerticalPanel';\r\nimport Education from '../../pageparts/cv/Education';\r\nimport { withTranslation } from 'react-i18next';\r\nimport TX from '../../localization/TX';\r\nimport ContactSnippet from '../../pageparts/contact/ContactSnippet';\r\n\r\nconst education = ({t,screenType }) => { \r\n  const tCV = (word) => TX(t,word,\"cv\")\r\n  const tMain = (word) => TX(t,word,\"main\")\r\n\r\n  const buttonClassName = \"btn normaltextsize AppbackgroundcolorB menubutton btnWithColor btn-outline-dark p-0 m-auto\"\r\n  const rightContent = ContactSnippet(screenType,tCV,tMain,buttonClassName)\r\n\r\n  const leftContent = <>\r\n    {Education(tCV)}\r\n  </>\r\n\r\n  return (\r\n    <div className=\"normaltextsize\">\r\n        {SideVerticalPanel (screenType,leftContent,rightContent,false)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withTranslation()(education);","import TransMultiPRM from '../../components/textProcessor/TransMultiPRM';\r\n\r\nconst References = (tCV) => {\r\n\r\n    const referencesArr =[\r\n        \"references0\",\r\n        \"references1\",\r\n        \"references2\",\r\n        \"references3\",\r\n        \"references4\",\r\n        \"references5\",\r\n        \"references6\",\r\n        \"references7\",\r\n        \"references8\"\r\n      ]\r\n    \r\n      const references = TransMultiPRM(tCV,\"h2\",\"subtitle\",\"\",\"pl-2 nospace\",referencesArr)\r\n\r\n    return (\r\n        references\r\n    )\r\n}\r\n\r\nexport default References\r\n","import React from 'react';\r\nimport SideVerticalPanel from '../../components/panels/SideVerticalPanel';\r\nimport References from '../../pageparts/cv/References';\r\nimport { withTranslation } from 'react-i18next';\r\nimport TX from '../../localization/TX';\r\nimport ContactSnippet from '../../pageparts/contact/ContactSnippet';\r\n\r\nconst references = ({t,screenType }) => { \r\n  const tCV = (word) => TX(t,word,\"cv\")\r\n  const tMain = (word) => TX(t,word,\"main\")\r\n\r\n  const buttonClassName = \"btn normaltextsize AppbackgroundcolorB menubutton btnWithColor btn-outline-dark p-0 m-auto\"\r\n  const rightContent = ContactSnippet(screenType,tCV,tMain,buttonClassName)\r\n\r\n  const leftContent = <>\r\n    {References(tCV)}\r\n  </>\r\n\r\n  return (\r\n    <div className=\"normaltextsize\">\r\n        {SideVerticalPanel (screenType,leftContent,rightContent,false)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withTranslation()(references);","import React from 'react'\r\nimport SUB from './SUB';\r\n\r\nconst TransMultiSection = (t,titletag,titleClassN,paragraphClass,classN,title,sectionsArr) => {\r\n    const sub = title && SUB(titletag,titleClassN,t(title))\r\n    const list = sectionsArr.map((item) =>  {return <span className={classN}>{item}</span>});\r\n    \r\n\r\n    return (\r\n        <>\r\n            <span>{sub}</span>\r\n            <span className={paragraphClass}>{list}</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TransMultiSection","import React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nconst entrepreneurships = ({t,screenType }) => { \r\n  return (\r\n    <div>\r\n        {t(\"componentworks\")}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withTranslation(['entrepreneurships'])(entrepreneurships);","import TransMultiPRM from '../../components/textProcessor/TransMultiPRM';\r\nimport TransMultiSection from '../../components/textProcessor/TransMultiSection';\r\nimport React from 'react'\r\n\r\nconst Experience = (tCV) => {\r\n\r\n\r\n    const datascienceArr = [\r\n        \"datascience0\",\r\n        \"datascience1\",\r\n        \"datascience2\",\r\n        \"datascience3\",\r\n        \"datascience4\"\r\n    ]\r\n    const datascience = TransMultiPRM(tCV,\"h3\",\"subtitle\",\"\",\"pl-2 nospace\",datascienceArr)\r\n    \r\n    const developerArr = [\r\n        \"developer0\",\r\n        \"developer1\",\r\n        \"developer2\"\r\n    ]\r\n    const developer = TransMultiPRM(tCV,\"h3\",\"subtitle\",\"\",\"pl-2 nospace\",developerArr)\r\n    \r\n    \r\n    const indepAnalystArr = [\r\n        \"indepAnalyst0\",\r\n        \"indepAnalyst1\",\r\n        \"indepAnalyst2\"\r\n    ]\r\n    const indepAnalyst = TransMultiPRM(tCV,\"h3\",\"subtitle\",\"\",\"pl-2 nospace\",indepAnalystArr)\r\n    \r\n    const indepSoftArr =[\r\n        \"indepSoft0\",\r\n        \"indepSoft1\",\r\n        \"indepSoft2\",\r\n        \"indepSoft3\"\r\n    ]\r\n    const indepSoft = TransMultiPRM(tCV,\"h3\",\"subtitle\",\"\",\"pl-2 nospace\",indepSoftArr)\r\n\r\n    const independentArr=[\r\n        indepAnalyst,\r\n        indepSoft,\r\n      ]\r\n      const experienceArr=[\r\n        developer,\r\n        datascience\r\n      ]\r\n    \r\n    const independent = TransMultiSection(tCV,\"h2\",\"subtitle\",\"\",\"pl-2 nospace\",\"independent0\",independentArr)\r\n    const experience = TransMultiSection(tCV,\"h2\",\"subtitle\",\"\",\"pl-2 nospace\",\"experience0\",experienceArr)\r\n\r\n    return (\r\n        <>\r\n            <span>{experience}</span>\r\n            <span>{independent}</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Experience \r\n","import React from 'react';\r\nimport SideVerticalPanel from '../../components/panels/SideVerticalPanel';\r\nimport Experience from '../../pageparts/cv/Experience';\r\nimport { withTranslation } from 'react-i18next';\r\nimport TX from '../../localization/TX';\r\nimport ContactSnippet from '../../pageparts/contact/ContactSnippet';\r\n\r\nconst experience = ({t,screenType }) => { \r\n  const tCV = (word) => TX(t,word,\"cv\")\r\n  const tMain = (word) => TX(t,word,\"main\")\r\n\r\n  const buttonClassName = \"btn normaltextsize AppbackgroundcolorB menubutton btnWithColor btn-outline-dark p-0 m-auto\"\r\n  const rightContent = ContactSnippet(screenType,tCV,tMain,buttonClassName)\r\n\r\n  const leftContent = <>\r\n    {Experience(tCV)}\r\n  </>\r\n\r\n  return (\r\n    <div className=\"normaltextsize\">\r\n        {SideVerticalPanel (screenType,leftContent,rightContent,false)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withTranslation(['experience'])(experience);","import React from 'react'\r\n\r\nconst ProfilePic = (className,width) => {\r\n\r\n    let role = \"\"\r\n    const scientistSkills = \"R, python, SQL, PowerBI\"\r\n    const softwareSkills = \"React, Javascript, Bootstrap\"\r\n\r\n    if(document.documentElement.lang===\"en\"){\r\n        role = \"Data scientist (\" + scientistSkills + \"), software developer (\" + softwareSkills + \")\"\r\n        \r\n    }else{\r\n        role = \"Científico de datos (\" + scientistSkills + \"), desarrollador de software (\" + softwareSkills + \")\"\r\n    }\r\n\r\n    return (\r\n        <img\r\n            className={className}\r\n            src={window.location.origin + \"/img/daniel_nieto.jpg\"}\r\n            alt={\"Daniel Nieto González: \" + role}\r\n            style={{ width: width,border:'#222222 solid 1px'}}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ProfilePic\r\n","import React from 'react'\r\nimport {EmailLink,TelLink} from '../../components/modules/MyContactInfo';\r\nimport SUB from '../../components/textProcessor/SUB';\r\nimport PRM from '../../components/textProcessor/PRM';\r\n\r\nconst MyInfo = (tCV) => {\r\n\r\n    const intro = <span className=\"text-center\">\r\n        {SUB(\"h1\",\"subtitle\",tCV(\"namex\"))}\r\n        <span className=\"newline\"><span className=\"text-center nolineP littlespace mt-2\">{ EmailLink() }{<span className=\"pl-1\">   </span>}{ TelLink() }</span></span>\r\n        <span className=\"newline\"><span className=\"text-center nolineP littlespace\"><p><i className=\"las la-map-marker la-lg mr-2\"></i></p><p>{tCV(\"location\")}</p></span></span>\r\n        <span className=\"newline\"><span className=\"text-center nolineP littlespace\"><p><i className=\"las la-globe-americas la-lg mr-2\"></i></p>{PRM(\"\",\"[https://nietodaniel.github.io](https://nietodaniel.github.io)\")}</span></span>\r\n        <span className=\"newline\"><span className=\"text-center nolineP littlespace\"><p><i className=\"la la-linkedin la-lg mr-2\"></i></p>{PRM(\"\",\"[https://www.linkedin.com/in/nietodaniel-apps/](https://www.linkedin.com/in/nietodaniel-apps/)\")}</span></span>\r\n    </span>\r\n\r\n    return (\r\n        intro\r\n    )\r\n}\r\n\r\nexport default MyInfo","import PRM from '../../components/textProcessor/PRM';\r\nimport React from 'react'\r\n\r\nconst Summary = (tCV) => {\r\n\r\n    const summary = PRM(\"\",tCV(\"summary\"))\r\n\r\n    return (\r\n        <span className=\"text-justify\">{summary}</span>\r\n    )\r\n}\r\n\r\nexport default Summary","import React from 'react';\r\nimport SideVerticalPanel from '../../components/panels/SideVerticalPanel';\r\nimport ProfilePic from '../../pageparts/cv/ProfilePic';\r\nimport MyInfo from '../../pageparts/cv/MyInfo';\r\nimport Summary from '../../pageparts/cv/Summary';\r\nimport TX from '../../localization/TX';\r\nimport ContactSnippet from '../../pageparts/contact/ContactSnippet';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nconst home = ({t,screenType }) => { \r\n  const tCV = (word) => TX(t,word,\"cv\")\r\n  const tMain = (word) => TX(t,word,\"main\")\r\n\r\n  let leftContent = \"\"\r\n  if (screenType === \"normal\" ) {\r\n    leftContent = <div className=\"container-fluid mt-3 m-0 p-0\">\r\n    <div className=\"row w-100 m-0 p-0\">\r\n      <div className=\"offset-1 col-11 text-center\">\r\n        {ProfilePic(\"\",\"30vh\")}\r\n        <span className=\"small\">{MyInfo(tCV)}</span>\r\n      </div>\r\n      <div className=\"mt-2 offset-1 col-11\">\r\n        {Summary(tCV)}\r\n      </div>\r\n    </div>\r\n  </div>\r\n  }else if (screenType === \"miniV\" ) {\r\n    leftContent = <div className=\"container-fluid m-0 p-0\">\r\n    <div className=\"row w-100 m-0 p-0\">\r\n      <div className=\"col-12 text-center\">\r\n        {ProfilePic(\"\",\"20vh\")}\r\n        <span className=\"small\">{MyInfo(tCV)}</span>\r\n      </div>\r\n      <div className=\"mt-1 col-12\">\r\n        {Summary(tCV)}\r\n      </div>\r\n    </div>\r\n  </div>\r\n  } else {\r\n    leftContent = <div className=\"container-fluid m-0 p-0 mt-1 vertical-center\">\r\n      <div className=\"row w-100 m-0 p-0\">\r\n        <div className=\"col-2 text-center vertical-center\">\r\n        {ProfilePic(\"\",\"30vh\")}\r\n        </div>\r\n        <div className=\"col-4 vertical-center\">\r\n          <span className=\"small\">{MyInfo(tCV)}</span>\r\n        </div>\r\n        <div className=\"col-6 vertical-center\">\r\n          <span>{Summary(tCV)}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n  const buttonClassName = \"btn normaltextsize AppbackgroundcolorB menubutton btnWithColor btn-outline-dark p-0 m-auto\"\r\n  const rightContent = ContactSnippet(screenType,tCV,tMain,buttonClassName)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"normaltextsize\">\r\n        {SideVerticalPanel (screenType,leftContent,rightContent,false)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withTranslation()(home);","import TransMultiPRM from '../../components/textProcessor/TransMultiPRM';\r\n\r\nconst Repositories = (tCV) => {\r\n\r\n    const repositoriesArr = [\r\n        \"repositories0\",\r\n        \"repositories1\",\r\n        \"repositories2\",\r\n        \"repositories3\",\r\n        \"repositories4\"\r\n    ]\r\n    const repositories = TransMultiPRM(tCV,\"h2\",\"subtitle\",\"\",\"pl-2 nospace\",repositoriesArr)\r\n\r\n    return (\r\n        repositories\r\n    )\r\n}\r\n\r\nexport default Repositories\r\n","import React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nconst projects = ({t,screenType }) => { \r\n  return (\r\n    <div>\r\n        {t(\"componentworks\")}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withTranslation(['projects'])(projects);","import React from 'react';\r\nimport SideVerticalPanel from '../../components/panels/SideVerticalPanel';\r\nimport Repositories from '../../pageparts/cv/Repositories';\r\nimport { withTranslation } from 'react-i18next';\r\nimport TX from '../../localization/TX';\r\nimport ContactSnippet from '../../pageparts/contact/ContactSnippet';\r\n\r\nconst repositories = ({t,screenType }) => { \r\n  const tCV = (word) => TX(t,word,\"cv\")\r\n  const tMain = (word) => TX(t,word,\"main\")\r\n\r\n  const buttonClassName = \"btn normaltextsize AppbackgroundcolorB menubutton btnWithColor btn-outline-dark p-0 m-auto\"\r\n  const rightContent = ContactSnippet(screenType,tCV,tMain,buttonClassName)\r\n\r\n  const leftContent = <>\r\n    {Repositories(tCV)}\r\n  </>\r\n\r\n  return (\r\n    <div className=\"normaltextsize\">\r\n        {SideVerticalPanel (screenType,leftContent,rightContent,false)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withTranslation(['repositories'])(repositories);","import React from 'react'\r\n\r\nconst NormalPanel = (screenType,content) => {\r\n    const res =  <>\r\n            <div className={\"p-0 col col-12 col-md-8 offset-md-2\"}>\r\n                <span>{content}</span>\r\n            </div>\r\n        </>\r\n\r\n    return (\r\n        res\r\n    )\r\n}\r\n\r\nexport default NormalPanel;\r\n","import React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nconst story = ({t,screenType }) => { \r\n  return (\r\n    <div>\r\n        {t(\"componentworks\")}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withTranslation(['story'])(story);","import TransMultiPRM from '../../components/textProcessor/TransMultiPRM';\r\n\r\nconst NotFoundPP = (tNF) => {\r\n\r\n    const notFoundArr =[\r\n        \"notfound0\",\r\n        \"notfound1\"\r\n      ]\r\n    \r\n      const notfound = TransMultiPRM(tNF,\"h2\",\"subtitle\",\"\",\"pl-2 nospace\",notFoundArr)\r\n\r\n    return (\r\n        notfound\r\n    )\r\n}\r\n\r\nexport default NotFoundPP\r\n","import React from 'react';\r\nimport NormalPanel from '../../components/panels/NormalPanel';\r\nimport NotFoundPP from '../../pageparts/structure/NotFoundPP';\r\nimport { withTranslation } from 'react-i18next';\r\nimport TX from '../../localization/TX';\r\n\r\nconst notfound = ({t,screenType }) => { \r\n  const tNF = (word) => TX(t,word,\"notfound\")\r\n\r\n  const leftContent = <>\r\n    {NotFoundPP(tNF)}\r\n  </>\r\n\r\n  return (\r\n    <div className=\"normaltextsize mt-5 text-center\">\r\n        {NormalPanel (screenType,leftContent)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withTranslation()(notfound);\r\n","import TransMultiPRM from '../../components/textProcessor/TransMultiPRM';\r\n\r\nconst TermsPP = (t) => {\r\n\r\n    const contentArr =[\r\n        \"content0\",\r\n        \"content1\",\r\n        \"content2\",\r\n        \"content3\",\r\n        \"content4\",\r\n        \"content5\",\r\n        \"content6\"\r\n      ]\r\n    \r\n      const txt = TransMultiPRM(t,\"h2\",\"subtitle\",\"\",\"pl-2 nospace\",contentArr)\r\n\r\n    return (\r\n        <span className=\"small\">{txt}</span>\r\n    )\r\n}\r\n\r\nexport default TermsPP\r\n","import React from 'react';\r\nimport NormalPanel from '../../components/panels/NormalPanel';\r\nimport TermsPP from '../../pageparts/legal/TermsPP';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nconst terms = ({t,screenType }) => { \r\n\r\n  const leftContent = <>\r\n    {TermsPP(t)}\r\n  </>\r\n\r\n  return (\r\n    <div className=\"normaltextsize mt-5\">\r\n        {NormalPanel (screenType,leftContent)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withTranslation(['terms'])(terms);","import TransMultiPRM from '../../components/textProcessor/TransMultiPRM';\r\n\r\nconst PrivacyPP = (t) => {\r\n\r\n    const contentArr =[\r\n        \"content0\",\r\n        \"content1\"\r\n      ]\r\n    \r\n      const txt = TransMultiPRM(t,\"h2\",\"subtitle\",\"\",\"pl-2 nospace\",contentArr)\r\n\r\n    return (\r\n        <span className=\"small\">{txt}</span>\r\n    )\r\n}\r\n\r\nexport default PrivacyPP\r\n","import React from 'react';\r\nimport NormalPanel from '../../components/panels/NormalPanel';\r\nimport PrivacyPP from '../../pageparts/legal/PrivacyPP';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nconst privacy = ({t,screenType }) => { \r\n\r\n  const leftContent = <>\r\n    {PrivacyPP(t)}\r\n  </>\r\n\r\n  return (\r\n    <div className=\"normaltextsize mt-5\">\r\n        {NormalPanel (screenType,leftContent)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withTranslation(['privacy'])(privacy);","import TransMultiPRM from '../../components/textProcessor/TransMultiPRM';\r\n\r\nconst CookiesPP = (t) => {\r\n\r\n    const contentArr =[\r\n        \"content0\",\r\n        \"content1\"\r\n      ]\r\n    \r\n      const txt = TransMultiPRM(t,\"h2\",\"subtitle\",\"\",\"pl-2 nospace\",contentArr)\r\n\r\n    return (\r\n        <span className=\"small\">{txt}</span>\r\n    )\r\n}\r\n\r\nexport default CookiesPP\r\n","import React from 'react';\r\nimport NormalPanel from '../../components/panels/NormalPanel';\r\nimport CookiesPP from '../../pageparts/legal/CookiesPP';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nconst cookies = ({t,screenType }) => { \r\n\r\n  const leftContent = <>\r\n    {CookiesPP(t)}\r\n  </>\r\n\r\n  return (\r\n    <div className=\"normaltextsize mt-5\">\r\n        {NormalPanel (screenType,leftContent)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withTranslation(['cookies'])(cookies);","import TransMultiPRM from '../../components/textProcessor/TransMultiPRM';\r\n\r\nconst DataSciencePack = (tCV) => {\r\n\r\n    const datasciencePackArr = [\r\n        \"datasciencepacks\",\r\n        \"repositories2\",\r\n    ]\r\n    const datascience = TransMultiPRM(tCV,\"h2\",\"subtitle\",\"\",\"pl-2 nospace\",datasciencePackArr)\r\n\r\n    return (\r\n        datascience\r\n    )\r\n}\r\n\r\nexport default DataSciencePack\r\n","import React from 'react';\r\nimport SideVerticalPanel from '../../components/panels/SideVerticalPanel';\r\nimport DataSciencePack from '../../pageparts/cv/DataSciencePack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport TX from '../../localization/TX';\r\nimport ContactSnippet from '../../pageparts/contact/ContactSnippet';\r\n\r\nconst dataSciencePackages = ({t,screenType }) => { \r\n  const tCV = (word) => TX(t,word,\"cv\")\r\n  const tMain = (word) => TX(t,word,\"main\")\r\n\r\n  const buttonClassName = \"btn normaltextsize AppbackgroundcolorB menubutton btnWithColor btn-outline-dark p-0 m-auto\"\r\n  const rightContent = ContactSnippet(screenType,tCV,tMain,buttonClassName)\r\n\r\n  const leftContent = <>\r\n    {DataSciencePack(tCV)}\r\n  </>\r\n\r\n  return (\r\n    <div className=\"normaltextsize\">\r\n        {SideVerticalPanel (screenType,leftContent,rightContent,false)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withTranslation(['dataSciencePackages'])(dataSciencePackages);","import TransMultiPRM from '../../components/textProcessor/TransMultiPRM';\r\nimport TransMultiSection from '../../components/textProcessor/TransMultiSection';\r\nimport React from 'react'\r\n\r\nconst WorkProfilePP = (tCV) => {\r\n\r\n\r\n    const datascienceArr = [\r\n        \"profilescientist0\",\r\n        \"profilescientist1\",\r\n        \"profilescientist2\",\r\n        \"profilescientist3\",\r\n        \"profilescientist4\",\r\n        \"profilescientist5\",\r\n        \"profilescientist6\"\r\n    ]\r\n    const datascience = TransMultiPRM(tCV,\"h3\",\"subtitle\",\"\",\"pl-2 nospace\",datascienceArr)\r\n    \r\n    const developerArr = [\r\n        \"profilesoftware0\",\r\n        \"profilesoftware1\",\r\n        \"profilesoftware2\",\r\n        \"profilesoftware3\",\r\n        \"profilesoftware4\",\r\n        \"profilesoftware5\",\r\n        \"profilesoftware6\"\r\n    ]\r\n    const developer = TransMultiPRM(tCV,\"h3\",\"subtitle\",\"\",\"pl-2 nospace\",developerArr)\r\n    \r\n\r\n    const profileArr=[\r\n        developer,\r\n        datascience\r\n    ]\r\n    \r\n    const profile = TransMultiSection(tCV,\"h2\",\"subtitle\",\"\",\"pl-2 nospace\",\"myprofile\",profileArr)\r\n\r\n    return (\r\n        <>\r\n            <span>{profile}</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WorkProfilePP \r\n","import React from 'react';\r\nimport SideVerticalPanel from '../../components/panels/SideVerticalPanel';\r\nimport WorkProfilePP from '../../pageparts/cv/WorkProfilePP';\r\nimport { withTranslation } from 'react-i18next';\r\nimport TX from '../../localization/TX';\r\nimport ContactSnippet from '../../pageparts/contact/ContactSnippet';\r\n\r\nconst workprofile = ({t,screenType }) => { \r\n  const tCV = (word) => TX(t,word,\"cv\")\r\n  const tMain = (word) => TX(t,word,\"main\")\r\n\r\n  const buttonClassName = \"btn normaltextsize AppbackgroundcolorB menubutton btnWithColor btn-outline-dark p-0 m-auto\"\r\n  const rightContent = ContactSnippet(screenType,tCV,tMain,buttonClassName)\r\n\r\n  const leftContent = <>\r\n    {WorkProfilePP(tCV)}\r\n  </>\r\n\r\n  return (\r\n    <div className=\"normaltextsize\">\r\n        {SideVerticalPanel (screenType,leftContent,rightContent,false)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withTranslation(['workprofile'])(workprofile);","import TransMultiPRM from '../../components/textProcessor/TransMultiPRM';\r\n\r\nconst Skills = (tCV) => {\r\n\r\n    const skillsArr = [\r\n        \"skills0\",\r\n        \"skills1\",\r\n        \"skills2\",\r\n        \"skills3\",\r\n        \"skills4\",\r\n        \"skills5\",\r\n        \"skills6\",\r\n        \"skills7\",\r\n        \"skills8\"\r\n      ]\r\n      const skills = TransMultiPRM(tCV,\"h2\",\"subtitle\",\"\",\"pl-2 nospace\",skillsArr)\r\n\r\n    return (\r\n        skills\r\n    )\r\n}\r\n\r\nexport default Skills\r\n","import React from 'react';\r\nimport SideVerticalPanel from '../../components/panels/SideVerticalPanel';\r\nimport Skills from '../../pageparts/cv/Skills';\r\nimport { withTranslation } from 'react-i18next';\r\nimport TX from '../../localization/TX';\r\nimport ContactSnippet from '../../pageparts/contact/ContactSnippet';\r\n\r\nconst skills = ({t,screenType }) => { \r\n  const tCV = (word) => TX(t,word,\"cv\")\r\n  const tMain = (word) => TX(t,word,\"main\")\r\n\r\n  const buttonClassName = \"btn normaltextsize AppbackgroundcolorB menubutton btnWithColor btn-outline-dark p-0 m-auto\"\r\n  const rightContent = ContactSnippet(screenType,tCV,tMain,buttonClassName,false,true)\r\n\r\n  const leftContent = <>\r\n    {Skills(tCV)}\r\n  </>\r\n\r\n  return (\r\n    <div className=\"normaltextsize\">\r\n        {SideVerticalPanel (screenType,leftContent,rightContent,false)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withTranslation()(skills);","import TransMultiPRM from '../../components/textProcessor/TransMultiPRM';\r\n\r\nexport const Research = (tCV) => {\r\n\r\n    const researchArr = [\r\n        \"research0\",\r\n        \"research1\",\r\n        \"research2\",\r\n        \"research3\"\r\n      ]\r\n      const research = TransMultiPRM(tCV,\"h2\",\"subtitle\",\"\",\"pl-2 nospace\",researchArr)\r\n\r\n    return (\r\n        research\r\n    )\r\n}\r\n\r\nexport default Research \r\n","import TransMultiPRM from '../../components/textProcessor/TransMultiPRM';\r\n\r\nconst Awards = (tCV) => {\r\n\r\n    const awardsArr = [\r\n        \"awards0\",\r\n        \"awards1\",\r\n        \"awards2\"\r\n      ]\r\n      const awards = TransMultiPRM(tCV,\"h2\",\"subtitle\",\"\",\"pl-2 nospace\",awardsArr)\r\n\r\n    return (\r\n        awards\r\n    )\r\n}\r\n\r\nexport default Awards","import React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport NormalPanel from '../../components/panels/NormalPanel';\r\n\r\nimport Education from '../../pageparts/cv/Education';\r\nimport MyInfo from '../../pageparts/cv/MyInfo';\r\nimport References from '../../pageparts/cv/References';\r\nimport Skills from '../../pageparts/cv/Skills';\r\nimport Summary from '../../pageparts/cv/Summary';\r\nimport Research from '../../pageparts/cv/Research';\r\nimport Experience from '../../pageparts/cv/Experience';\r\nimport Repositories from '../../pageparts/cv/Repositories';\r\nimport Awards from '../../pageparts/cv/Awards';\r\nimport TX from '../../localization/TX';\r\nimport ContactSnippet from '../../pageparts/contact/ContactSnippet';\r\n\r\nconst cv = ({t,screenType }) => { \r\n\r\n  const tCV = (word) => TX(t,word,\"cv\")\r\n  const tMain = (word) => TX(t,word,\"main\")\r\n\r\n  const full = <>\r\n    {MyInfo(tCV)}\r\n    <br />\r\n    {Summary(tCV)}\r\n    <span>{Skills(tCV)}</span>\r\n    <span>{Education(tCV)}</span>\r\n    <span>{Experience(tCV)}</span>\r\n    <span>{Repositories(tCV)}</span>\r\n    <span>{Research(tCV)}</span>\r\n    <span>{Awards(tCV)}</span>\r\n    <span>{References(tCV)}</span>\r\n  </>\r\n\r\n  const buttonClassName = \"btn normaltextsize AppbackgroundcolorB menubutton btnWithColor btn-outline-dark p-0 m-auto\"\r\n  const conctactSection = ContactSnippet(\"miniV\",tCV,tMain,buttonClassName,true,true)\r\n\r\n  return (\r\n    <div className=\"normaltextsize container-fluid mb-5\">\r\n      <span className=\"col-12 small\">\r\n          {conctactSection}\r\n      </span>\r\n      <span className=\"col-12 small\">\r\n          {NormalPanel(\"screenType\",full)}\r\n      </span>\r\n      <span className=\"col-12 small\" style={{padding:'-15px'}}>\r\n          {conctactSection}\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default withTranslation()(cv);","import TransMultiPRM from '../../components/textProcessor/TransMultiPRM';\r\n\r\nconst ComingSoonPP = (tMAIN) => {\r\n\r\n    const notFoundArr =[\r\n        \"comingsoon\",\r\n        \"\"\r\n      ]\r\n    \r\n      const notfound = TransMultiPRM(tMAIN,\"h2\",\"subtitle\",\"\",\"pl-2 nospace\",notFoundArr)\r\n\r\n    return (\r\n        notfound\r\n    )\r\n}\r\n\r\nexport default ComingSoonPP\r\n","import React from 'react';\r\nimport NormalPanel from '../../components/panels/NormalPanel';\r\nimport ComingSoonPP from '../../pageparts/structure/ComingSoonPP';\r\nimport { withTranslation } from 'react-i18next';\r\nimport TX from '../../localization/TX';\r\n//import ContactSnippet from '../../pageparts/contact/ContactSnippet';\r\n\r\nconst comingsoon = ({t,screenType }) => { \r\n  const tNF = (word) => TX(t,word,\"main\")\r\n\r\n  const leftContent = <>\r\n    {ComingSoonPP(tNF)}\r\n  </>\r\n\r\n  return (\r\n    <div className=\"normaltextsize mt-5 text-center\">\r\n        {NormalPanel (screenType,leftContent)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withTranslation()(comingsoon);\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport PremiumSoftware from '../pages/content/softwarePremium';\r\nimport FreeSoftware from '../pages/content/softwareFree';\r\nimport UpcomingSoftware from '../pages/projects/upcomingSoftware';\r\nimport Education from '../pages/experience/education';\r\nimport References from '../pages/experience/references';\r\nimport Entrepreneurships from '../pages/projects/entrepreneurships';\r\nimport Experience from '../pages/experience/experience';\r\nimport Home from '../pages/structure/home';\r\nimport Projects from '../pages/projects/projects';\r\nimport Repositories from '../pages/content/repositories';\r\nimport Story from '../pages/experience/story';\r\nimport Notfound from '../pages/structure/notfound';\r\nimport Terms from '../pages/legal/terms';\r\nimport Privacy from '../pages/legal/privacy';\r\nimport Cookies from '../pages/legal/cookies';\r\nimport DataSciencePackages  from '../pages/content/dataSciencePackages';\r\nimport WorkProfile  from '../pages/content/workprofile';\r\nimport Skills  from '../pages/content/skills';\r\nimport Cv from '../pages/experience/cv';\r\nimport ComingSoon from '../pages/structure/comingsoon';\r\n\r\n\r\nclass DashboardRoutes extends React.Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n        <Switch>\r\n          <Route exact path=\"/:lang/software/upcoming\" render={() => (<ComingSoon screenType={this.props.screenType} />)}  />\r\n          <Route exact path=\"/:lang/software/free\" render={() => (<ComingSoon screenType={this.props.screenType} />)}  />\r\n          <Route exact path=\"/:lang/software\" render={() => (<ComingSoon screenType={this.props.screenType} />)}  />\r\n          <Route exact path=\"/:lang/datascience/packages\" render={() => (<DataSciencePackages screenType={this.props.screenType} />)}  />\r\n          <Route exact path=\"/:lang/workprofile\" render={() => (<WorkProfile screenType={this.props.screenType} />)}  />\r\n          <Route exact path=\"/:lang/skills\" render={() => (<Skills screenType={this.props.screenType} />)}  />\r\n          <Route exact path=\"/:lang/references\" render={() => (<References screenType={this.props.screenType} />)}  />\r\n          <Route exact path=\"/:lang/education\" render={() => (<Education screenType={this.props.screenType} />)}  />\r\n          <Route exact path=\"/:lang/entrepreneurships\" render={() => (<ComingSoon screenType={this.props.screenType} />)}  />\r\n          <Route exact path=\"/:lang/experience\" render={() => (<Experience screenType={this.props.screenType} />)}  />\r\n          <Route exact path=\"/:lang/projects\" render={() => (<ComingSoon screenType={this.props.screenType} />)}  />\r\n          <Route exact path=\"/:lang/repositories\" render={() => (<Repositories screenType={this.props.screenType} />)}  />\r\n          <Route exact path=\"/:lang/story\" render={() => (<ComingSoon screenType={this.props.screenType} />)}  />\r\n          <Route exact path=\"/:lang/terms\" render={() => (<Terms screenType={this.props.screenType} />)}  />\r\n          <Route exact path=\"/:lang/privacy\" render={() => (<Privacy screenType={this.props.screenType} />)}  />\r\n          <Route exact path=\"/:lang/cv\" render={() => (<Cv screenType={this.props.screenType} />)}  />\r\n          <Route exact path=\"/:lang/cookies\" render={() => (<Cookies screenType={this.props.screenType} />)}  />\r\n          <Route exact path=\"/:lang/\" render={() => (<Home screenType={this.props.screenType} />)}  />\r\n          <Route path=\"\" render={() => (<Notfound screenType={this.props.screenType} />)}  />\r\n        </Switch>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default DashboardRoutes;\r\n\r\n","import React from 'react';\r\nimport DashboardRoutes from './DashboardRoutes';\r\n\r\n\r\nclass MainContainer extends React.Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return this.props.AllowReRender(nextProps, this.props);\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <DashboardRoutes locale={this.props.locale} screenType={this.props.screenType} />\r\n    );\r\n  }\r\n} \r\n\r\nexport default MainContainer;\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nclass HtmlHeadManager extends React.Component {\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n      return this.props.AllowReRender(nextProps, this.props);\r\n    }\r\n  \r\n    render() {\r\n        console.log('Helmet re-rendered');\r\n\r\n        let finalHelmet = \"\"\r\n        const basicKeywords = \"R, Python, Stata, React, ReactJS, Bootstrap, Excel, Software, Azure, SQL, Tableau, Power, BI, Machine, Deep, Learning, Data, Javascript, Front, Frontend, CRISP, DM, \"\r\n\r\n        if( this.props.locale===\"en\"){\r\n          finalHelmet = <Helmet >\r\n            <html lang=\"en\" />\r\n            <meta name=\"description\" content=\"Data scientist, software developer & Entrepreneur (www.digitalmedtools.com) in services for biomedical researchers\" />\r\n            <meta name=\"keywords\" content={basicKeywords+\"Developer, Mining, Prediction, Analytics, Analysis, Business , Intelligence\"} />\r\n          </Helmet>\r\n        }else{\r\n          finalHelmet = <Helmet >\r\n            <html lang=\"es\" />\r\n            <meta name=\"description\" content=\"Científico de datos, desarrollador de software & emprendedor (www.digitalmedtools.com) en servicios para investigadores biomédicos\" />\r\n            <meta name=\"keywords\" content={basicKeywords+\"Desarrollador, Minería, Predicción, Analítica, Datos, Inteligencia, Negocios\"} />\r\n          </Helmet>\r\n        }\r\n\r\n        return (\r\n          finalHelmet\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default HtmlHeadManager","const getCurrentScreenType = () => {\r\n    const w= window.screen.width;\r\n    const h = window.screen.height;\r\n    const orientation = h<w;\r\n    let screenSize = '';\r\n    if (w < 768) {\r\n      screenSize = 'xs';\r\n    } else if (w < 992) {\r\n      screenSize = 'sm';\r\n    } else if (w < 1200) {\r\n      screenSize = 'md';\r\n    } else {\r\n      screenSize = 'lg';\r\n    }\r\n    let result = \"\"\r\n    if (screenSize === 'xs' || screenSize === 'sm'){\r\n        if(orientation===false){\r\n          result = \"miniV\"\r\n        }else{\r\n          result = \"miniH\"\r\n        }\r\n    }else{\r\n      result = \"normal\"\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport {getCurrentScreenType};","import React from 'react';\r\n\r\nimport NavbarTop from '../pageframe/Navbartop';\r\nimport NavbarBottom from '../pageframe/Navbarbottom';\r\n\r\nimport { Redirect, Switch } from 'react-router-dom';\r\nimport {\r\n  AllowReRenderTopNavBar,\r\n  AllowReRenderBottomNavBar,\r\n  AllowReRenderContent,\r\n  AllowReRenderHelmet\r\n} from '../components/modules/AllowReRender';\r\nimport MainContainer from './MainContainer';\r\nimport HtmlHeadManager from '../localization/HtmlHeadManager'\r\nimport {getCurrentScreenType} from '../components/modules/ScreenType'\r\n\r\n\r\nclass PageFrame extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    const screenType = getCurrentScreenType()\r\n    this.state = {\r\n      screenType: screenType\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if ('onorientationchange' in window) {\r\n      window.addEventListener(\r\n        'orientationchange',\r\n        () => {\r\n          // `this` is now pointing to `window`, not the component. So use `self`.\r\n          const currentscreenType = getCurrentScreenType();\r\n          this.setState({\r\n            screenType: currentscreenType\r\n          });\r\n        },\r\n        true\r\n      );\r\n    }\r\n  }\r\n\r\n  render() { \r\n    let redirectIfNecesarry = \"\";\r\n    \r\n    return (\r\n      <>\r\n        <HtmlHeadManager locale={this.props.locale} AllowReRender={AllowReRenderHelmet} />\r\n        <NavbarTop\r\n          locale={this.props.locale}\r\n          i18n={this.props.i18n}\r\n          path={this.props.path}\r\n          screenType={this.state.screenType}\r\n          AllowReRender={AllowReRenderTopNavBar}\r\n        />\r\n        <div id=\"wrapper\" className=\"toggled\">\r\n            <Switch>\r\n              {redirectIfNecesarry}          \r\n              <MainContainer\r\n                path=\"/:lang/\"\r\n                screenType={this.state.screenType}\r\n                AllowReRender={AllowReRenderContent}\r\n                locale={this.props.locale}\r\n              />\r\n\r\n          </Switch>\r\n        </div>\r\n        <NavbarBottom\r\n          locale={this.props.locale}\r\n          AllowReRender={AllowReRenderBottomNavBar}\r\n          screenType={this.state.screenType}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageFrame;\r\n","const GetURLParts = (path) => {\r\n  let parts = path.split('/');\r\n  const noEmpty = parts.filter(function(e) { return e !== '' })\r\n  const noQ = noEmpty.filter(function(e) { return e !== '?' })\r\n  const clean = noQ.filter(function(e) { return e !== '#' })\r\n  return clean\r\n}\r\n\r\nconst GetLocaleAndPath = (i18n,locationObj) => {\r\n  const pathname = locationObj.pathname\r\n  const search = locationObj.search+locationObj.hash\r\n  const relativepath = pathname+search\r\n  let oldlocale = i18n.language || window.localStorage.i18nextLng\r\n  let parts = GetURLParts(relativepath)\r\n  console.log(\"oriparts\",parts)\r\n  let locale =  parts.shift();\r\n  let faultyLocale=false\r\n  if (locale !== 'en' && locale !== 'es'){\r\n    console.error(\"ERROR: locale is... \"+locale+\" changing to... \"+oldlocale)\r\n    locale=oldlocale\r\n  }\r\n  const partstwo = [\"\",\"?\",locale].concat(parts).concat(\"\")\r\n  console.log(\"newparts\",partstwo)\r\n  const newpath = partstwo.join(\"/\")\r\n  if(newpath!==relativepath){\r\n    console.error(\"Modifying path: \"+relativepath+\" changing to... \"+newpath)\r\n    window.history.replaceState(null, {}, newpath)\r\n  }\r\n  const path = [\"\"].concat(parts).concat(\"\")\r\n  return {locale:locale,path:path.join(\"/\"),faultyLocale:faultyLocale}\r\n}\r\n\r\nexport default GetLocaleAndPath","import React from 'react';\r\nimport PageFrame from './PageFrame';\r\nimport GetLocaleAndPath from '../components/modules/GetLocaleAndPath';\r\n\r\nconst AppRouter = ({i18n}) => {\r\n\r\n    const location = window.location\r\n    const {locale,path,faultyLocale} = GetLocaleAndPath(i18n,location)\r\n\r\n    return (\r\n      <div id=\"main-container\">\r\n          <PageFrame\r\n            i18n={i18n} locale={locale} path={path} faultyLocale={faultyLocale}\r\n          />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default AppRouter;\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\nimport ENmain from '../locales/en/main.json'\r\nimport ENcookies from '../locales/en/cookies.json'\r\nimport ENdataSciencePackages from '../locales/en/dataSciencePackages.json'\r\nimport ENeducation from '../locales/en/education.json'\r\nimport ENentrepreneurships from '../locales/en/entrepreneurships.json'\r\nimport ENexperience from '../locales/en/experience.json'\r\nimport ENhome from '../locales/en/home.json'\r\nimport ENnotfound from '../locales/en/notfound.json'\r\nimport ENprivacy from '../locales/en/privacy.json'\r\nimport ENprojects from '../locales/en/projects.json'\r\nimport ENrepositories from '../locales/en/repositories.json'\r\nimport ENskills from '../locales/en/skills.json'\r\nimport ENsoftwareFree from '../locales/en/softwareFree.json'\r\nimport ENsoftwarePremium from '../locales/en/softwarePremium.json'\r\nimport ENstory from '../locales/en/story.json'\r\nimport ENterms from '../locales/en/terms.json'\r\nimport ENupcomingSoftware from '../locales/en/upcomingSoftware.json'\r\nimport ENworkprofile from '../locales/en/workprofile.json'\r\nimport ESmain from '../locales/es/main.json'\r\nimport EScookies from '../locales/es/cookies.json'\r\nimport ESdataSciencePackages from '../locales/es/dataSciencePackages.json'\r\nimport ESeducation from '../locales/es/education.json'\r\nimport ESentrepreneurships from '../locales/es/entrepreneurships.json'\r\nimport ESexperience from '../locales/es/experience.json'\r\nimport EShome from '../locales/es/home.json'\r\nimport ESnotfound from '../locales/es/notfound.json'\r\nimport ESprivacy from '../locales/es/privacy.json'\r\nimport ESprojects from '../locales/es/projects.json'\r\nimport ESrepositories from '../locales/es/repositories.json'\r\nimport ESskills from '../locales/es/skills.json'\r\nimport ESsoftwareFree from '../locales/es/softwareFree.json'\r\nimport ESsoftwarePremium from '../locales/es/softwarePremium.json'\r\nimport ESstory from '../locales/es/story.json'\r\nimport ESterms from '../locales/es/terms.json'\r\nimport ESupcomingSoftware from '../locales/es/upcomingSoftware.json'\r\nimport ESworkprofile from '../locales/es/workprofile.json'\r\nimport ENcv from '../locales/en/cv.json'\r\nimport EScv from '../locales/es/cv.json'\r\nimport ENreferences from '../locales/en/references.json'\r\nimport ESreferences from '../locales/es/references.json'\r\n\r\n\r\n// don't want to use this?\r\n// have a look at the Quick start guide\r\n// for passing in lng and translations on init\r\n\r\nconst options = {\r\n  // order and from where user language should be detected\r\n  order: ['path', 'querystring', 'cookie', 'localStorage', 'sessionStorage'],\r\n\r\n  // keys or params to lookup language from\r\n  lookupQuerystring: 'lng',\r\n  lookupCookie: 'i18next',\r\n  lookupLocalStorage: 'i18nextLng',\r\n  lookupSessionStorage: 'i18nextLng',\r\n  lookupFromPathIndex: 0,\r\n  lookupFromSubdomainIndex: 0,\r\n\r\n  // cache user language on\r\n  caches: ['localStorage', 'cookie'],\r\n  excludeCacheFor: ['cimode'], // languages to not persist (cookie, localStorage)\r\n\r\n  // optional expire and domain for set cookie\r\n  cookieMinutes: 10,\r\n  cookieDomain: 'myDomain',\r\n\r\n  // optional htmlTag with lang attribute, the default is:\r\n  htmlTag: document.documentElement,\r\n\r\n  // optional set cookie options, reference:[MDN Set-Cookie docs](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie)\r\n  cookieOptions: { path: '/', sameSite: 'strict' },\r\n};\r\n\r\ni18n\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    whitelist: ['es', 'en'],\r\n    fallbackLng: 'en',\r\n    debug: true,\r\n\r\n    detection: options,\r\n\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    },\r\n    resources: {\r\n      en: {\r\n        cookies: ENcookies,\r\n        dataSciencePackages: ENdataSciencePackages,\r\n        education: ENeducation,\r\n        entrepreneurships: ENentrepreneurships,\r\n        experience: ENexperience,\r\n        home: ENhome,\r\n        notfound: ENnotfound,\r\n        privacy: ENprivacy,\r\n        projects: ENprojects,\r\n        repositories: ENrepositories,\r\n        skills: ENskills,\r\n        softwareFree: ENsoftwareFree,\r\n        softwarePremium: ENsoftwarePremium,\r\n        story: ENstory,\r\n        terms: ENterms,\r\n        upcomingSoftware: ENupcomingSoftware,\r\n        workprofile: ENworkprofile,\r\n        main: ENmain,\r\n        cv: ENcv,\r\n        references: ENreferences\r\n      },\r\n      es: {\r\n        cookies: EScookies,\r\n        dataSciencePackages: ESdataSciencePackages,\r\n        education: ESeducation,\r\n        entrepreneurships: ESentrepreneurships,\r\n        experience: ESexperience,\r\n        home: EShome,\r\n        notfound: ESnotfound,\r\n        privacy: ESprivacy,\r\n        projects: ESprojects,\r\n        repositories: ESrepositories,\r\n        skills: ESskills,\r\n        softwareFree: ESsoftwareFree,\r\n        softwarePremium: ESsoftwarePremium,\r\n        story: ESstory,\r\n        terms: ESterms,\r\n        upcomingSoftware: ESupcomingSoftware,\r\n        workprofile: ESworkprofile,\r\n        main: ESmain,\r\n        cv: EScv,\r\n        references: ESreferences\r\n      }\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","import React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport './App.css';\r\nimport AppRouter from './routers/AppRouter';\r\nimport { HelmetProvider } from 'react-helmet-async';\r\nimport { I18nextProvider } from \"react-i18next\";\r\nimport i18n from \"./localization/i18n\";\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst App = () =>{\r\n    const helmetContext = {};\r\n\r\n    return (\r\n      <I18nextProvider>\r\n        <HelmetProvider context={helmetContext}>\r\n          <BrowserRouter  basename=\"/?/\" >\r\n            <AppRouter i18n={i18n} />\r\n          </BrowserRouter>\r\n        </HelmetProvider>\r\n      </I18nextProvider>\r\n    );\r\n}\r\n\r\nexport default withTranslation('translations')(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'line-awesome/dist/line-awesome/css/line-awesome.min.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <>\r\n      <App />\r\n  </>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}